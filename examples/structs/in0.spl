class ListInt {
    int elem;
    ListInt next;
}

int head(ListInt l)
{
    if (l == null)
        return -1;
    return l.elem;
}

ListInt tail(ListInt l)
{
    if (l == null)
        return null;
    return l.next;
}

ListInt reverse(ListInt l)
{
    ListInt acc = null;

    while (l != null)
    {
        ListInt temp = new ListInt;
        temp.elem = l.elem;
        temp.next = acc;
        acc = temp;

        l = l.next;
    }

    return acc;
}

void printListInt(ListInt l)
{
    while (l != null)
    {
        printInt(l.elem);
        l = l.next;
    }

    return;
}

ListInt listFromArray(int[] arr, int n)
{
    ListInt acc = null;
    int i = n - 1;
    while (i >= 0)
    {
        ListInt temp = new ListInt;
        temp.elem = arr[i];
        temp.next = acc;
        acc = temp;
        i--;
    }

    return acc;
}

int main()
{
    int n = 10;
    int[] arr = new int[n];
    int i = 0;
    while (i < n)
    {
        arr[i] = i;
        i++;
    }

    ListInt l = listFromArray(arr, n);

    printListInt(l);

    ListInt l2 = reverse(l);

    printListInt(l2);

    return 0;
}
