-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from grammar/ParSPL.y
-----------------------------------------------------------------------------

state 149 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Integer -> L_integ                                 (1)
	CIdent -> L_CIdent                                 (2)
	VIdent -> L_VIdent                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type VIdent '(' ListArgument ')' Block   (5)
	TopDef -> 'class' CIdent '{' ListClassArgument '}'   (6)
	ListTopDef -> TopDef                               (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	Argument -> Type VIdent                            (9)
	ListArgument ->                                    (10)
	ListArgument -> Argument                           (11)
	ListArgument -> Argument ',' ListArgument          (12)
	ClassArgument -> Type ListVIdent ';'               (13)
	ListVIdent -> VIdent                               (14)
	ListVIdent -> VIdent ',' ListVIdent                (15)
	ListClassArgument ->                               (16)
	ListClassArgument -> ListClassArgument ClassArgument   (17)
	Block -> '{' ListStmt '}'                          (18)
	ListStmt ->                                        (19)
	ListStmt -> ListStmt Stmt                          (20)
	Stmt -> ';'                                        (21)
	Stmt -> Block                                      (22)
	Stmt -> Type ListItem ';'                          (23)
	Stmt -> Expr '=' Expr ';'                          (24)
	Stmt -> Expr '++' ';'                              (25)
	Stmt -> Expr '--' ';'                              (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' '(' Expr ')' Stmt                     (29)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (30)
	Stmt -> 'while' '(' Expr ')' Stmt                  (31)
	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr ')' Stmt   (32)
	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' Expr ')' Stmt   (33)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr ')' Stmt   (34)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt   (35)
	Stmt -> 'for' '(' VIdent 'in' Expr ')' Stmt        (36)
	Stmt -> Expr ';'                                   (37)
	Item -> VIdent                                     (38)
	Item -> VIdent '=' Expr                            (39)
	ListItem -> Item                                   (40)
	ListItem -> Item ',' ListItem                      (41)
	Type -> 'int'                                      (42)
	Type -> 'bool'                                     (43)
	Type -> 'void'                                     (44)
	Type -> CIdent                                     (45)
	Type -> Type '[]'                                  (46)
	Type -> Type '(' ListType ')'                      (47)
	ListType ->                                        (48)
	ListType -> Type                                   (49)
	ListType -> Type ',' ListType                      (50)
	Expr6 -> 'null'                                    (51)
	Expr6 -> Integer                                   (52)
	Expr6 -> 'true'                                    (53)
	Expr6 -> 'false'                                   (54)
	Expr6 -> VIdent                                    (55)
	Expr6 -> Expr6 '.' VIdent                          (56)
	Expr6 -> Expr6 '[' Expr ']'                        (57)
	Expr6 -> Expr6 '(' ListExpr ')'                    (58)
	Expr6 -> '(' Expr ')'                              (59)
	Expr5 -> UnaryOp Expr5                             (60)
	Expr5 -> Expr6                                     (61)
	Expr4 -> Expr4 MulOp Expr5                         (62)
	Expr4 -> Expr5                                     (63)
	Expr3 -> Expr3 AddOp Expr4                         (64)
	Expr3 -> Expr4                                     (65)
	Expr2 -> Expr2 RelOp Expr3                         (66)
	Expr2 -> Expr3                                     (67)
	Expr1 -> Expr2 '&&' Expr1                          (68)
	Expr1 -> Expr2                                     (69)
	Expr -> Expr1 '||' Expr                            (70)
	Expr -> 'new' CIdent                               (71)
	Expr -> 'new' Type '[' Expr ']'                    (72)
	Expr -> '\\' ListArgument '->' Stmt                (73)
	Expr -> Expr1                                      (74)
	ListExpr ->                                        (75)
	ListExpr -> Expr                                   (76)
	ListExpr -> Expr ',' ListExpr                      (77)
	UnaryOp -> '-'                                     (78)
	UnaryOp -> '!'                                     (79)
	UnaryOp -> '~'                                     (80)
	AddOp -> '+'                                       (81)
	AddOp -> '-'                                       (82)
	MulOp -> '*'                                       (83)
	MulOp -> '/'                                       (84)
	MulOp -> '%'                                       (85)
	MulOp -> '<<'                                      (86)
	MulOp -> '>>'                                      (87)
	MulOp -> '&'                                       (88)
	MulOp -> '|'                                       (89)
	MulOp -> '^'                                       (90)
	RelOp -> '<'                                       (91)
	RelOp -> '<='                                      (92)
	RelOp -> '>'                                       (93)
	RelOp -> '>='                                      (94)
	RelOp -> '=='                                      (95)
	RelOp -> '!='                                      (96)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'->'           { PT _ (TS _ 14) }
	'.'            { PT _ (TS _ 15) }
	'/'            { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<<'           { PT _ (TS _ 19) }
	'<='           { PT _ (TS _ 20) }
	'='            { PT _ (TS _ 21) }
	'=='           { PT _ (TS _ 22) }
	'>'            { PT _ (TS _ 23) }
	'>='           { PT _ (TS _ 24) }
	'>>'           { PT _ (TS _ 25) }
	'['            { PT _ (TS _ 26) }
	'[]'           { PT _ (TS _ 27) }
	'\\'           { PT _ (TS _ 28) }
	']'            { PT _ (TS _ 29) }
	'^'            { PT _ (TS _ 30) }
	'bool'         { PT _ (TS _ 31) }
	'class'        { PT _ (TS _ 32) }
	'else'         { PT _ (TS _ 33) }
	'false'        { PT _ (TS _ 34) }
	'if'           { PT _ (TS _ 35) }
	'int'          { PT _ (TS _ 36) }
	'new'          { PT _ (TS _ 37) }
	'null'         { PT _ (TS _ 38) }
	'return'       { PT _ (TS _ 39) }
	'true'         { PT _ (TS _ 40) }
	'void'         { PT _ (TS _ 41) }
	'while'        { PT _ (TS _ 42) }
	'{'            { PT _ (TS _ 43) }
	'|'            { PT _ (TS _ 44) }
	'||'           { PT _ (TS _ 45) }
	'}'            { PT _ (TS _ 46) }
	'~'            { PT _ (TS _ 47) }
	'for'          { PT _ (TS _ 48) }
	'to'           { PT _ (TS _ 49) }
	'down'         { PT _ (TS _ 50) }
	'in'           { PT _ (TS _ 51) }
	'by'           { PT _ (TS _ 52) }
	L_integ        { PT _ (TI _) }
	L_CIdent       { PT _ (T_CIdent _) }
	L_VIdent       { PT _ (T_VIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Integer         rule  1
	CIdent          rule  2
	VIdent          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	ListTopDef      rules 7, 8
	Argument        rule  9
	ListArgument    rules 10, 11, 12
	ClassArgument   rule  13
	ListVIdent      rules 14, 15
	ListClassArgument rules 16, 17
	Block           rule  18
	ListStmt        rules 19, 20
	Stmt            rules 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37
	Item            rules 38, 39
	ListItem        rules 40, 41
	Type            rules 42, 43, 44, 45, 46, 47
	ListType        rules 48, 49, 50
	Expr6           rules 51, 52, 53, 54, 55, 56, 57, 58, 59
	Expr5           rules 60, 61
	Expr4           rules 62, 63
	Expr3           rules 64, 65
	Expr2           rules 66, 67
	Expr1           rules 68, 69
	Expr            rules 70, 71, 72, 73, 74
	ListExpr        rules 75, 76, 77
	UnaryOp         rules 78, 79, 80
	AddOp           rules 81, 82
	MulOp           rules 83, 84, 85, 86, 87, 88, 89, 90
	RelOp           rules 91, 92, 93, 94, 95, 96

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<<'           reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'>>'           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'|'            reduce using rule 1
	'||'           reduce using rule 1
	'to'           reduce using rule 1
	'down'         reduce using rule 1
	'by'           reduce using rule 1


State 3

	Type -> CIdent .                                    (rule 45)

	'('            reduce using rule 45
	')'            reduce using rule 45
	','            reduce using rule 45
	'[]'           reduce using rule 45
	L_VIdent       reduce using rule 45


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 7)
	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'bool'         shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12
	%eof           reduce using rule 7

	CIdent         goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 18
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . VIdent '(' ListArgument ')' Block    (rule 5)
	Type -> Type . '[]'                                 (rule 46)
	Type -> Type . '(' ListType ')'                     (rule 47)

	'('            shift, and enter state 15
	'[]'           shift, and enter state 16
	L_VIdent       shift, and enter state 17

	VIdent         goto state 14

State 8

	Type -> 'bool' .                                    (rule 43)

	'('            reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	L_VIdent       reduce using rule 43


State 9

	TopDef -> 'class' . CIdent '{' ListClassArgument '}'    (rule 6)

	L_CIdent       shift, and enter state 12

	CIdent         goto state 13

State 10

	Type -> 'int' .                                     (rule 42)

	'('            reduce using rule 42
	')'            reduce using rule 42
	','            reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	L_VIdent       reduce using rule 42


State 11

	Type -> 'void' .                                    (rule 44)

	'('            reduce using rule 44
	')'            reduce using rule 44
	','            reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	L_VIdent       reduce using rule 44


State 12

	CIdent -> L_CIdent .                                (rule 2)

	'('            reduce using rule 2
	')'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'--'           reduce using rule 2
	';'            reduce using rule 2
	'='            reduce using rule 2
	'['            reduce using rule 2
	'[]'           reduce using rule 2
	']'            reduce using rule 2
	'{'            reduce using rule 2
	'to'           reduce using rule 2
	'down'         reduce using rule 2
	'by'           reduce using rule 2
	L_VIdent       reduce using rule 2


State 13

	TopDef -> 'class' CIdent . '{' ListClassArgument '}'    (rule 6)

	'{'            shift, and enter state 22


State 14

	TopDef -> Type VIdent . '(' ListArgument ')' Block    (rule 5)

	'('            shift, and enter state 21


State 15

	Type -> Type '(' . ListType ')'                     (rule 47)

	')'            reduce using rule 48
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Type           goto state 19
	ListType       goto state 20

State 16

	Type -> Type '[]' .                                 (rule 46)

	'('            reduce using rule 46
	')'            reduce using rule 46
	','            reduce using rule 46
	'['            reduce using rule 46
	'[]'           reduce using rule 46
	L_VIdent       reduce using rule 46


State 17

	VIdent -> L_VIdent .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'->'           reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<<'           reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'>>'           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'^'            reduce using rule 3
	'|'            reduce using rule 3
	'||'           reduce using rule 3
	'to'           reduce using rule 3
	'down'         reduce using rule 3
	'in'           reduce using rule 3
	'by'           reduce using rule 3


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 19

	Type -> Type . '[]'                                 (rule 46)
	Type -> Type . '(' ListType ')'                     (rule 47)
	ListType -> Type .                                  (rule 49)
	ListType -> Type . ',' ListType                     (rule 50)

	'('            shift, and enter state 15
	')'            reduce using rule 49
	','            shift, and enter state 28
	'[]'           shift, and enter state 16


State 20

	Type -> Type '(' ListType . ')'                     (rule 47)

	')'            shift, and enter state 27


State 21

	TopDef -> Type VIdent '(' . ListArgument ')' Block    (rule 5)

	')'            reduce using rule 10
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Argument       goto state 24
	ListArgument   goto state 25
	Type           goto state 26

State 22

	TopDef -> 'class' CIdent '{' . ListClassArgument '}'    (rule 6)

	'bool'         reduce using rule 16
	'int'          reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_CIdent       reduce using rule 16

	ListClassArgumentgoto state 23

State 23

	TopDef -> 'class' CIdent '{' ListClassArgument . '}'    (rule 6)
	ListClassArgument -> ListClassArgument . ClassArgument    (rule 17)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	'}'            shift, and enter state 35
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	ClassArgument  goto state 33
	Type           goto state 34

State 24

	ListArgument -> Argument .                          (rule 11)
	ListArgument -> Argument . ',' ListArgument         (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 32
	'->'           reduce using rule 11


State 25

	TopDef -> Type VIdent '(' ListArgument . ')' Block    (rule 5)

	')'            shift, and enter state 31


State 26

	Argument -> Type . VIdent                           (rule 9)
	Type -> Type . '[]'                                 (rule 46)
	Type -> Type . '(' ListType ')'                     (rule 47)

	'('            shift, and enter state 15
	'[]'           shift, and enter state 16
	L_VIdent       shift, and enter state 17

	VIdent         goto state 30

State 27

	Type -> Type '(' ListType ')' .                     (rule 47)

	'('            reduce using rule 47
	')'            reduce using rule 47
	','            reduce using rule 47
	'['            reduce using rule 47
	'[]'           reduce using rule 47
	L_VIdent       reduce using rule 47


State 28

	ListType -> Type ',' . ListType                     (rule 50)

	')'            reduce using rule 48
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Type           goto state 19
	ListType       goto state 29

State 29

	ListType -> Type ',' ListType .                     (rule 50)

	')'            reduce using rule 50


State 30

	Argument -> Type VIdent .                           (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9
	'->'           reduce using rule 9


State 31

	TopDef -> Type VIdent '(' ListArgument ')' . Block    (rule 5)

	'{'            shift, and enter state 40

	Block          goto state 39

State 32

	ListArgument -> Argument ',' . ListArgument         (rule 12)

	')'            reduce using rule 10
	'->'           reduce using rule 10
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Argument       goto state 24
	ListArgument   goto state 38
	Type           goto state 26

State 33

	ListClassArgument -> ListClassArgument ClassArgument .    (rule 17)

	'bool'         reduce using rule 17
	'int'          reduce using rule 17
	'void'         reduce using rule 17
	'}'            reduce using rule 17
	L_CIdent       reduce using rule 17


State 34

	ClassArgument -> Type . ListVIdent ';'              (rule 13)
	Type -> Type . '[]'                                 (rule 46)
	Type -> Type . '(' ListType ')'                     (rule 47)

	'('            shift, and enter state 15
	'[]'           shift, and enter state 16
	L_VIdent       shift, and enter state 17

	VIdent         goto state 36
	ListVIdent     goto state 37

State 35

	TopDef -> 'class' CIdent '{' ListClassArgument '}' .    (rule 6)

	'bool'         reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'void'         reduce using rule 6
	L_CIdent       reduce using rule 6
	%eof           reduce using rule 6


State 36

	ListVIdent -> VIdent .                              (rule 14)
	ListVIdent -> VIdent . ',' ListVIdent               (rule 15)

	','            shift, and enter state 43
	';'            reduce using rule 14


State 37

	ClassArgument -> Type ListVIdent . ';'              (rule 13)

	';'            shift, and enter state 42


State 38

	ListArgument -> Argument ',' ListArgument .         (rule 12)

	')'            reduce using rule 12
	'->'           reduce using rule 12


State 39

	TopDef -> Type VIdent '(' ListArgument ')' Block .    (rule 5)

	'bool'         reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'void'         reduce using rule 5
	L_CIdent       reduce using rule 5
	%eof           reduce using rule 5


State 40

	Block -> '{' . ListStmt '}'                         (rule 18)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'\\'           reduce using rule 19
	'bool'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'null'         reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'~'            reduce using rule 19
	'for'          reduce using rule 19
	L_integ        reduce using rule 19
	L_CIdent       reduce using rule 19
	L_VIdent       reduce using rule 19

	ListStmt       goto state 41

State 41

	Block -> '{' ListStmt . '}'                         (rule 18)
	ListStmt -> ListStmt . Stmt                         (rule 20)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'}'            shift, and enter state 70
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 48
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 42

	ClassArgument -> Type ListVIdent ';' .              (rule 13)

	'bool'         reduce using rule 13
	'int'          reduce using rule 13
	'void'         reduce using rule 13
	'}'            reduce using rule 13
	L_CIdent       reduce using rule 13


State 43

	ListVIdent -> VIdent ',' . ListVIdent               (rule 15)

	L_VIdent       shift, and enter state 17

	VIdent         goto state 36
	ListVIdent     goto state 44

State 44

	ListVIdent -> VIdent ',' ListVIdent .               (rule 15)

	';'            reduce using rule 15


State 45

	Expr6 -> Integer .                                  (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<<'           reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'>>'           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'^'            reduce using rule 52
	'|'            reduce using rule 52
	'||'           reduce using rule 52
	'to'           reduce using rule 52
	'down'         reduce using rule 52
	'by'           reduce using rule 52


State 46

	Expr6 -> VIdent .                                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<<'           reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'>>'           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'|'            reduce using rule 55
	'||'           reduce using rule 55
	'to'           reduce using rule 55
	'down'         reduce using rule 55
	'by'           reduce using rule 55


State 47

	Stmt -> Block .                                     (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'++'           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'--'           reduce using rule 22
	';'            reduce using rule 22
	'='            reduce using rule 22
	'\\'           reduce using rule 22
	']'            reduce using rule 22
	'bool'         reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'null'         reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'~'            reduce using rule 22
	'for'          reduce using rule 22
	'to'           reduce using rule 22
	'down'         reduce using rule 22
	'by'           reduce using rule 22
	L_integ        reduce using rule 22
	L_CIdent       reduce using rule 22
	L_VIdent       reduce using rule 22


State 48

	ListStmt -> ListStmt Stmt .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'\\'           reduce using rule 20
	'bool'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'null'         reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'~'            reduce using rule 20
	'for'          reduce using rule 20
	L_integ        reduce using rule 20
	L_CIdent       reduce using rule 20
	L_VIdent       reduce using rule 20


State 49

	Stmt -> Type . ListItem ';'                         (rule 23)
	Type -> Type . '[]'                                 (rule 46)
	Type -> Type . '(' ListType ')'                     (rule 47)

	'('            shift, and enter state 15
	'[]'           shift, and enter state 16
	L_VIdent       shift, and enter state 17

	VIdent         goto state 111
	Item           goto state 112
	ListItem       goto state 113

State 50

	Expr6 -> Expr6 . '.' VIdent                         (rule 56)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 58)
	Expr5 -> Expr6 .                                    (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            shift, and enter state 108
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'.'            shift, and enter state 109
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<<'           reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'>>'           reduce using rule 61
	'['            shift, and enter state 110
	']'            reduce using rule 61
	'^'            reduce using rule 61
	'|'            reduce using rule 61
	'||'           reduce using rule 61
	'to'           reduce using rule 61
	'down'         reduce using rule 61
	'by'           reduce using rule 61


State 51

	Expr4 -> Expr5 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<<'           reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'>>'           reduce using rule 63
	']'            reduce using rule 63
	'^'            reduce using rule 63
	'|'            reduce using rule 63
	'||'           reduce using rule 63
	'to'           reduce using rule 63
	'down'         reduce using rule 63
	'by'           reduce using rule 63


State 52

	Expr4 -> Expr4 . MulOp Expr5                        (rule 62)
	Expr3 -> Expr4 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            shift, and enter state 100
	'&'            shift, and enter state 101
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 102
	'+'            reduce using rule 65
	'++'           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'--'           reduce using rule 65
	'/'            shift, and enter state 103
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<<'           shift, and enter state 104
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'>>'           shift, and enter state 105
	']'            reduce using rule 65
	'^'            shift, and enter state 106
	'|'            shift, and enter state 107
	'||'           reduce using rule 65
	'to'           reduce using rule 65
	'down'         reduce using rule 65
	'by'           reduce using rule 65

	MulOp          goto state 99

State 53

	Expr3 -> Expr3 . AddOp Expr4                        (rule 64)
	Expr2 -> Expr3 .                                    (rule 67)

	'!='           reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 97
	'++'           reduce using rule 67
	','            reduce using rule 67
	'-'            shift, and enter state 98
	'--'           reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67
	'to'           reduce using rule 67
	'down'         reduce using rule 67
	'by'           reduce using rule 67

	AddOp          goto state 96

State 54

	Expr2 -> Expr2 . RelOp Expr3                        (rule 66)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 68)
	Expr1 -> Expr2 .                                    (rule 69)

	'!='           shift, and enter state 89
	'&&'           shift, and enter state 90
	')'            reduce using rule 69
	'++'           reduce using rule 69
	','            reduce using rule 69
	'--'           reduce using rule 69
	';'            reduce using rule 69
	'<'            shift, and enter state 91
	'<='           shift, and enter state 92
	'='            reduce using rule 69
	'=='           shift, and enter state 93
	'>'            shift, and enter state 94
	'>='           shift, and enter state 95
	']'            reduce using rule 69
	'||'           reduce using rule 69
	'to'           reduce using rule 69
	'down'         reduce using rule 69
	'by'           reduce using rule 69

	RelOp          goto state 88

State 55

	Expr -> Expr1 . '||' Expr                           (rule 70)
	Expr -> Expr1 .                                     (rule 74)

	')'            reduce using rule 74
	'++'           reduce using rule 74
	','            reduce using rule 74
	'--'           reduce using rule 74
	';'            reduce using rule 74
	'='            reduce using rule 74
	']'            reduce using rule 74
	'||'           shift, and enter state 87
	'to'           reduce using rule 74
	'down'         reduce using rule 74
	'by'           reduce using rule 74


State 56

	Stmt -> Expr . '=' Expr ';'                         (rule 24)
	Stmt -> Expr . '++' ';'                             (rule 25)
	Stmt -> Expr . '--' ';'                             (rule 26)
	Stmt -> Expr . ';'                                  (rule 37)

	'++'           shift, and enter state 83
	'--'           shift, and enter state 84
	';'            shift, and enter state 85
	'='            shift, and enter state 86


State 57

	Expr5 -> UnaryOp . Expr5                            (rule 60)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 63
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 82
	UnaryOp        goto state 57

State 58

	UnaryOp -> '!' .                                    (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'null'         reduce using rule 79
	'true'         reduce using rule 79
	'~'            reduce using rule 79
	L_integ        reduce using rule 79
	L_VIdent       reduce using rule 79


State 59

	Expr6 -> '(' . Expr ')'                             (rule 59)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 81
	UnaryOp        goto state 57

State 60

	UnaryOp -> '-' .                                    (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'null'         reduce using rule 78
	'true'         reduce using rule 78
	'~'            reduce using rule 78
	L_integ        reduce using rule 78
	L_VIdent       reduce using rule 78


State 61

	Stmt -> ';' .                                       (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'++'           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'--'           reduce using rule 21
	';'            reduce using rule 21
	'='            reduce using rule 21
	'\\'           reduce using rule 21
	']'            reduce using rule 21
	'bool'         reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'null'         reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'~'            reduce using rule 21
	'for'          reduce using rule 21
	'to'           reduce using rule 21
	'down'         reduce using rule 21
	'by'           reduce using rule 21
	L_integ        reduce using rule 21
	L_CIdent       reduce using rule 21
	L_VIdent       reduce using rule 21


State 62

	Expr -> '\\' . ListArgument '->' Stmt               (rule 73)

	'->'           reduce using rule 10
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Argument       goto state 24
	ListArgument   goto state 80
	Type           goto state 26

State 63

	Expr6 -> 'false' .                                  (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<<'           reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'>>'           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'|'            reduce using rule 54
	'||'           reduce using rule 54
	'to'           reduce using rule 54
	'down'         reduce using rule 54
	'by'           reduce using rule 54


State 64

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 30)

	'('            shift, and enter state 79


State 65

	Expr -> 'new' . CIdent                              (rule 71)
	Expr -> 'new' . Type '[' Expr ']'                   (rule 72)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 77
	Type           goto state 78

State 66

	Expr6 -> 'null' .                                   (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<<'           reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'>>'           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'^'            reduce using rule 51
	'|'            reduce using rule 51
	'||'           reduce using rule 51
	'to'           reduce using rule 51
	'down'         reduce using rule 51
	'by'           reduce using rule 51


State 67

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 76
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 75
	UnaryOp        goto state 57

State 68

	Expr6 -> 'true' .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<<'           reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'>>'           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'^'            reduce using rule 53
	'|'            reduce using rule 53
	'||'           reduce using rule 53
	'to'           reduce using rule 53
	'down'         reduce using rule 53
	'by'           reduce using rule 53


State 69

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 31)

	'('            shift, and enter state 74


State 70

	Block -> '{' ListStmt '}' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'++'           reduce using rule 18
	','            reduce using rule 18
	'-'            reduce using rule 18
	'--'           reduce using rule 18
	';'            reduce using rule 18
	'='            reduce using rule 18
	'\\'           reduce using rule 18
	']'            reduce using rule 18
	'bool'         reduce using rule 18
	'class'        reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'null'         reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'~'            reduce using rule 18
	'for'          reduce using rule 18
	'to'           reduce using rule 18
	'down'         reduce using rule 18
	'by'           reduce using rule 18
	L_integ        reduce using rule 18
	L_CIdent       reduce using rule 18
	L_VIdent       reduce using rule 18
	%eof           reduce using rule 18


State 71

	UnaryOp -> '~' .                                    (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'null'         reduce using rule 80
	'true'         reduce using rule 80
	'~'            reduce using rule 80
	L_integ        reduce using rule 80
	L_VIdent       reduce using rule 80


State 72

	Stmt -> 'for' . '(' VIdent '=' Expr 'to' Expr ')' Stmt    (rule 32)
	Stmt -> 'for' . '(' VIdent '=' Expr 'to' Expr 'by' Expr ')' Stmt    (rule 33)
	Stmt -> 'for' . '(' VIdent '=' Expr 'down' 'to' Expr ')' Stmt    (rule 34)
	Stmt -> 'for' . '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 35)
	Stmt -> 'for' . '(' VIdent 'in' Expr ')' Stmt       (rule 36)

	'('            shift, and enter state 73


State 73

	Stmt -> 'for' '(' . VIdent '=' Expr 'to' Expr ')' Stmt    (rule 32)
	Stmt -> 'for' '(' . VIdent '=' Expr 'to' Expr 'by' Expr ')' Stmt    (rule 33)
	Stmt -> 'for' '(' . VIdent '=' Expr 'down' 'to' Expr ')' Stmt    (rule 34)
	Stmt -> 'for' '(' . VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 35)
	Stmt -> 'for' '(' . VIdent 'in' Expr ')' Stmt       (rule 36)

	L_VIdent       shift, and enter state 17

	VIdent         goto state 135

State 74

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 31)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 134
	UnaryOp        goto state 57

State 75

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 133


State 76

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'++'           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'--'           reduce using rule 28
	';'            reduce using rule 28
	'='            reduce using rule 28
	'\\'           reduce using rule 28
	']'            reduce using rule 28
	'bool'         reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'null'         reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'~'            reduce using rule 28
	'for'          reduce using rule 28
	'to'           reduce using rule 28
	'down'         reduce using rule 28
	'by'           reduce using rule 28
	L_integ        reduce using rule 28
	L_CIdent       reduce using rule 28
	L_VIdent       reduce using rule 28


State 77

	Type -> CIdent .                                    (rule 45)
	Expr -> 'new' CIdent .                              (rule 71)

	'('            reduce using rule 45
	')'            reduce using rule 71
	'++'           reduce using rule 71
	','            reduce using rule 71
	'--'           reduce using rule 71
	';'            reduce using rule 71
	'='            reduce using rule 71
	'['            reduce using rule 45
	'[]'           reduce using rule 45
	']'            reduce using rule 71
	'to'           reduce using rule 71
	'down'         reduce using rule 71
	'by'           reduce using rule 71


State 78

	Type -> Type . '[]'                                 (rule 46)
	Type -> Type . '(' ListType ')'                     (rule 47)
	Expr -> 'new' Type . '[' Expr ']'                   (rule 72)

	'('            shift, and enter state 15
	'['            shift, and enter state 132
	'[]'           shift, and enter state 16


State 79

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 131
	UnaryOp        goto state 57

State 80

	Expr -> '\\' ListArgument . '->' Stmt               (rule 73)

	'->'           shift, and enter state 130


State 81

	Expr6 -> '(' Expr . ')'                             (rule 59)

	')'            shift, and enter state 129


State 82

	Expr5 -> UnaryOp Expr5 .                            (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<<'           reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'>>'           reduce using rule 60
	']'            reduce using rule 60
	'^'            reduce using rule 60
	'|'            reduce using rule 60
	'||'           reduce using rule 60
	'to'           reduce using rule 60
	'down'         reduce using rule 60
	'by'           reduce using rule 60


State 83

	Stmt -> Expr '++' . ';'                             (rule 25)

	';'            shift, and enter state 128


State 84

	Stmt -> Expr '--' . ';'                             (rule 26)

	';'            shift, and enter state 127


State 85

	Stmt -> Expr ';' .                                  (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'++'           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'--'           reduce using rule 37
	';'            reduce using rule 37
	'='            reduce using rule 37
	'\\'           reduce using rule 37
	']'            reduce using rule 37
	'bool'         reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'new'          reduce using rule 37
	'null'         reduce using rule 37
	'return'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	'~'            reduce using rule 37
	'for'          reduce using rule 37
	'to'           reduce using rule 37
	'down'         reduce using rule 37
	'by'           reduce using rule 37
	L_integ        reduce using rule 37
	L_CIdent       reduce using rule 37
	L_VIdent       reduce using rule 37


State 86

	Stmt -> Expr '=' . Expr ';'                         (rule 24)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 126
	UnaryOp        goto state 57

State 87

	Expr -> Expr1 '||' . Expr                           (rule 70)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 125
	UnaryOp        goto state 57

State 88

	Expr2 -> Expr2 RelOp . Expr3                        (rule 66)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 63
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 124
	UnaryOp        goto state 57

State 89

	RelOp -> '!=' .                                     (rule 96)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'-'            reduce using rule 96
	'false'        reduce using rule 96
	'null'         reduce using rule 96
	'true'         reduce using rule 96
	'~'            reduce using rule 96
	L_integ        reduce using rule 96
	L_VIdent       reduce using rule 96


State 90

	Expr1 -> Expr2 '&&' . Expr1                         (rule 68)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 63
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 123
	UnaryOp        goto state 57

State 91

	RelOp -> '<' .                                      (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'false'        reduce using rule 91
	'null'         reduce using rule 91
	'true'         reduce using rule 91
	'~'            reduce using rule 91
	L_integ        reduce using rule 91
	L_VIdent       reduce using rule 91


State 92

	RelOp -> '<=' .                                     (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'-'            reduce using rule 92
	'false'        reduce using rule 92
	'null'         reduce using rule 92
	'true'         reduce using rule 92
	'~'            reduce using rule 92
	L_integ        reduce using rule 92
	L_VIdent       reduce using rule 92


State 93

	RelOp -> '==' .                                     (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'-'            reduce using rule 95
	'false'        reduce using rule 95
	'null'         reduce using rule 95
	'true'         reduce using rule 95
	'~'            reduce using rule 95
	L_integ        reduce using rule 95
	L_VIdent       reduce using rule 95


State 94

	RelOp -> '>' .                                      (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'-'            reduce using rule 93
	'false'        reduce using rule 93
	'null'         reduce using rule 93
	'true'         reduce using rule 93
	'~'            reduce using rule 93
	L_integ        reduce using rule 93
	L_VIdent       reduce using rule 93


State 95

	RelOp -> '>=' .                                     (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'-'            reduce using rule 94
	'false'        reduce using rule 94
	'null'         reduce using rule 94
	'true'         reduce using rule 94
	'~'            reduce using rule 94
	L_integ        reduce using rule 94
	L_VIdent       reduce using rule 94


State 96

	Expr3 -> Expr3 AddOp . Expr4                        (rule 64)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 63
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 122
	UnaryOp        goto state 57

State 97

	AddOp -> '+' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'null'         reduce using rule 81
	'true'         reduce using rule 81
	'~'            reduce using rule 81
	L_integ        reduce using rule 81
	L_VIdent       reduce using rule 81


State 98

	AddOp -> '-' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'null'         reduce using rule 82
	'true'         reduce using rule 82
	'~'            reduce using rule 82
	L_integ        reduce using rule 82
	L_VIdent       reduce using rule 82


State 99

	Expr4 -> Expr4 MulOp . Expr5                        (rule 62)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 63
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 121
	UnaryOp        goto state 57

State 100

	MulOp -> '%' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'null'         reduce using rule 85
	'true'         reduce using rule 85
	'~'            reduce using rule 85
	L_integ        reduce using rule 85
	L_VIdent       reduce using rule 85


State 101

	MulOp -> '&' .                                      (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'null'         reduce using rule 88
	'true'         reduce using rule 88
	'~'            reduce using rule 88
	L_integ        reduce using rule 88
	L_VIdent       reduce using rule 88


State 102

	MulOp -> '*' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'null'         reduce using rule 83
	'true'         reduce using rule 83
	'~'            reduce using rule 83
	L_integ        reduce using rule 83
	L_VIdent       reduce using rule 83


State 103

	MulOp -> '/' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'null'         reduce using rule 84
	'true'         reduce using rule 84
	'~'            reduce using rule 84
	L_integ        reduce using rule 84
	L_VIdent       reduce using rule 84


State 104

	MulOp -> '<<' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'null'         reduce using rule 86
	'true'         reduce using rule 86
	'~'            reduce using rule 86
	L_integ        reduce using rule 86
	L_VIdent       reduce using rule 86


State 105

	MulOp -> '>>' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'null'         reduce using rule 87
	'true'         reduce using rule 87
	'~'            reduce using rule 87
	L_integ        reduce using rule 87
	L_VIdent       reduce using rule 87


State 106

	MulOp -> '^' .                                      (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'null'         reduce using rule 90
	'true'         reduce using rule 90
	'~'            reduce using rule 90
	L_integ        reduce using rule 90
	L_VIdent       reduce using rule 90


State 107

	MulOp -> '|' .                                      (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'null'         reduce using rule 89
	'true'         reduce using rule 89
	'~'            reduce using rule 89
	L_integ        reduce using rule 89
	L_VIdent       reduce using rule 89


State 108

	Expr6 -> Expr6 '(' . ListExpr ')'                   (rule 58)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 75
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 119
	ListExpr       goto state 120
	UnaryOp        goto state 57

State 109

	Expr6 -> Expr6 '.' . VIdent                         (rule 56)

	L_VIdent       shift, and enter state 17

	VIdent         goto state 118

State 110

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 57)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 117
	UnaryOp        goto state 57

State 111

	Item -> VIdent .                                    (rule 38)
	Item -> VIdent . '=' Expr                           (rule 39)

	','            reduce using rule 38
	';'            reduce using rule 38
	'='            shift, and enter state 116


State 112

	ListItem -> Item .                                  (rule 40)
	ListItem -> Item . ',' ListItem                     (rule 41)

	','            shift, and enter state 115
	';'            reduce using rule 40


State 113

	Stmt -> Type ListItem . ';'                         (rule 23)

	';'            shift, and enter state 114


State 114

	Stmt -> Type ListItem ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'++'           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'--'           reduce using rule 23
	';'            reduce using rule 23
	'='            reduce using rule 23
	'\\'           reduce using rule 23
	']'            reduce using rule 23
	'bool'         reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'null'         reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'~'            reduce using rule 23
	'for'          reduce using rule 23
	'to'           reduce using rule 23
	'down'         reduce using rule 23
	'by'           reduce using rule 23
	L_integ        reduce using rule 23
	L_CIdent       reduce using rule 23
	L_VIdent       reduce using rule 23


State 115

	ListItem -> Item ',' . ListItem                     (rule 41)

	L_VIdent       shift, and enter state 17

	VIdent         goto state 111
	Item           goto state 112
	ListItem       goto state 147

State 116

	Item -> VIdent '=' . Expr                           (rule 39)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 146
	UnaryOp        goto state 57

State 117

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 57)

	']'            shift, and enter state 145


State 118

	Expr6 -> Expr6 '.' VIdent .                         (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<<'           reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'>>'           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'^'            reduce using rule 56
	'|'            reduce using rule 56
	'||'           reduce using rule 56
	'to'           reduce using rule 56
	'down'         reduce using rule 56
	'by'           reduce using rule 56


State 119

	ListExpr -> Expr .                                  (rule 76)
	ListExpr -> Expr . ',' ListExpr                     (rule 77)

	')'            reduce using rule 76
	','            shift, and enter state 144


State 120

	Expr6 -> Expr6 '(' ListExpr . ')'                   (rule 58)

	')'            shift, and enter state 143


State 121

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<<'           reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'>>'           reduce using rule 62
	']'            reduce using rule 62
	'^'            reduce using rule 62
	'|'            reduce using rule 62
	'||'           reduce using rule 62
	'to'           reduce using rule 62
	'down'         reduce using rule 62
	'by'           reduce using rule 62


State 122

	Expr4 -> Expr4 . MulOp Expr5                        (rule 62)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 64)

	'!='           reduce using rule 64
	'%'            shift, and enter state 100
	'&'            shift, and enter state 101
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 102
	'+'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'--'           reduce using rule 64
	'/'            shift, and enter state 103
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<<'           shift, and enter state 104
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'>>'           shift, and enter state 105
	']'            reduce using rule 64
	'^'            shift, and enter state 106
	'|'            shift, and enter state 107
	'||'           reduce using rule 64
	'to'           reduce using rule 64
	'down'         reduce using rule 64
	'by'           reduce using rule 64

	MulOp          goto state 99

State 123

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 68)

	')'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'--'           reduce using rule 68
	';'            reduce using rule 68
	'='            reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68
	'to'           reduce using rule 68
	'down'         reduce using rule 68
	'by'           reduce using rule 68


State 124

	Expr3 -> Expr3 . AddOp Expr4                        (rule 64)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 66)

	'!='           reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'+'            shift, and enter state 97
	'++'           reduce using rule 66
	','            reduce using rule 66
	'-'            shift, and enter state 98
	'--'           reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66
	'to'           reduce using rule 66
	'down'         reduce using rule 66
	'by'           reduce using rule 66

	AddOp          goto state 96

State 125

	Expr -> Expr1 '||' Expr .                           (rule 70)

	')'            reduce using rule 70
	'++'           reduce using rule 70
	','            reduce using rule 70
	'--'           reduce using rule 70
	';'            reduce using rule 70
	'='            reduce using rule 70
	']'            reduce using rule 70
	'to'           reduce using rule 70
	'down'         reduce using rule 70
	'by'           reduce using rule 70


State 126

	Stmt -> Expr '=' Expr . ';'                         (rule 24)

	';'            shift, and enter state 142


State 127

	Stmt -> Expr '--' ';' .                             (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'++'           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'--'           reduce using rule 26
	';'            reduce using rule 26
	'='            reduce using rule 26
	'\\'           reduce using rule 26
	']'            reduce using rule 26
	'bool'         reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'null'         reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'~'            reduce using rule 26
	'for'          reduce using rule 26
	'to'           reduce using rule 26
	'down'         reduce using rule 26
	'by'           reduce using rule 26
	L_integ        reduce using rule 26
	L_CIdent       reduce using rule 26
	L_VIdent       reduce using rule 26


State 128

	Stmt -> Expr '++' ';' .                             (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'++'           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'--'           reduce using rule 25
	';'            reduce using rule 25
	'='            reduce using rule 25
	'\\'           reduce using rule 25
	']'            reduce using rule 25
	'bool'         reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'null'         reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'~'            reduce using rule 25
	'for'          reduce using rule 25
	'to'           reduce using rule 25
	'down'         reduce using rule 25
	'by'           reduce using rule 25
	L_integ        reduce using rule 25
	L_CIdent       reduce using rule 25
	L_VIdent       reduce using rule 25


State 129

	Expr6 -> '(' Expr ')' .                             (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<<'           reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'>>'           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'^'            reduce using rule 59
	'|'            reduce using rule 59
	'||'           reduce using rule 59
	'to'           reduce using rule 59
	'down'         reduce using rule 59
	'by'           reduce using rule 59


State 130

	Expr -> '\\' ListArgument '->' . Stmt               (rule 73)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 141
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 131

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 30)

	')'            shift, and enter state 140


State 132

	Expr -> 'new' Type '[' . Expr ']'                   (rule 72)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 139
	UnaryOp        goto state 57

State 133

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'++'           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'--'           reduce using rule 27
	';'            reduce using rule 27
	'='            reduce using rule 27
	'\\'           reduce using rule 27
	']'            reduce using rule 27
	'bool'         reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'null'         reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'~'            reduce using rule 27
	'for'          reduce using rule 27
	'to'           reduce using rule 27
	'down'         reduce using rule 27
	'by'           reduce using rule 27
	L_integ        reduce using rule 27
	L_CIdent       reduce using rule 27
	L_VIdent       reduce using rule 27


State 134

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 31)

	')'            shift, and enter state 138


State 135

	Stmt -> 'for' '(' VIdent . '=' Expr 'to' Expr ')' Stmt    (rule 32)
	Stmt -> 'for' '(' VIdent . '=' Expr 'to' Expr 'by' Expr ')' Stmt    (rule 33)
	Stmt -> 'for' '(' VIdent . '=' Expr 'down' 'to' Expr ')' Stmt    (rule 34)
	Stmt -> 'for' '(' VIdent . '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 35)
	Stmt -> 'for' '(' VIdent . 'in' Expr ')' Stmt       (rule 36)

	'='            shift, and enter state 136
	'in'           shift, and enter state 137


State 136

	Stmt -> 'for' '(' VIdent '=' . Expr 'to' Expr ')' Stmt    (rule 32)
	Stmt -> 'for' '(' VIdent '=' . Expr 'to' Expr 'by' Expr ')' Stmt    (rule 33)
	Stmt -> 'for' '(' VIdent '=' . Expr 'down' 'to' Expr ')' Stmt    (rule 34)
	Stmt -> 'for' '(' VIdent '=' . Expr 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 35)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 153
	UnaryOp        goto state 57

State 137

	Stmt -> 'for' '(' VIdent 'in' . Expr ')' Stmt       (rule 36)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 152
	UnaryOp        goto state 57

State 138

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 31)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 151
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 139

	Expr -> 'new' Type '[' Expr . ']'                   (rule 72)

	']'            shift, and enter state 150


State 140

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 149
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 141

	Expr -> '\\' ListArgument '->' Stmt .               (rule 73)

	')'            reduce using rule 73
	'++'           reduce using rule 73
	','            reduce using rule 73
	'--'           reduce using rule 73
	';'            reduce using rule 73
	'='            reduce using rule 73
	']'            reduce using rule 73
	'to'           reduce using rule 73
	'down'         reduce using rule 73
	'by'           reduce using rule 73


State 142

	Stmt -> Expr '=' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'++'           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'--'           reduce using rule 24
	';'            reduce using rule 24
	'='            reduce using rule 24
	'\\'           reduce using rule 24
	']'            reduce using rule 24
	'bool'         reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'null'         reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'~'            reduce using rule 24
	'for'          reduce using rule 24
	'to'           reduce using rule 24
	'down'         reduce using rule 24
	'by'           reduce using rule 24
	L_integ        reduce using rule 24
	L_CIdent       reduce using rule 24
	L_VIdent       reduce using rule 24


State 143

	Expr6 -> Expr6 '(' ListExpr ')' .                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<<'           reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'>>'           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'^'            reduce using rule 58
	'|'            reduce using rule 58
	'||'           reduce using rule 58
	'to'           reduce using rule 58
	'down'         reduce using rule 58
	'by'           reduce using rule 58


State 144

	ListExpr -> Expr ',' . ListExpr                     (rule 77)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 75
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 119
	ListExpr       goto state 148
	UnaryOp        goto state 57

State 145

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<<'           reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'>>'           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'^'            reduce using rule 57
	'|'            reduce using rule 57
	'||'           reduce using rule 57
	'to'           reduce using rule 57
	'down'         reduce using rule 57
	'by'           reduce using rule 57


State 146

	Item -> VIdent '=' Expr .                           (rule 39)

	','            reduce using rule 39
	';'            reduce using rule 39


State 147

	ListItem -> Item ',' ListItem .                     (rule 41)

	';'            reduce using rule 41


State 148

	ListExpr -> Expr ',' ListExpr .                     (rule 77)

	')'            reduce using rule 77


State 149

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 29)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'++'           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'--'           reduce using rule 29
	';'            reduce using rule 29
	'='            reduce using rule 29
	'\\'           reduce using rule 29
	']'            reduce using rule 29
	'bool'         reduce using rule 29
	'else'         shift, and enter state 157
			(reduce using rule 29)

	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'null'         reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'~'            reduce using rule 29
	'for'          reduce using rule 29
	'to'           reduce using rule 29
	'down'         reduce using rule 29
	'by'           reduce using rule 29
	L_integ        reduce using rule 29
	L_CIdent       reduce using rule 29
	L_VIdent       reduce using rule 29


State 150

	Expr -> 'new' Type '[' Expr ']' .                   (rule 72)

	')'            reduce using rule 72
	'++'           reduce using rule 72
	','            reduce using rule 72
	'--'           reduce using rule 72
	';'            reduce using rule 72
	'='            reduce using rule 72
	']'            reduce using rule 72
	'to'           reduce using rule 72
	'down'         reduce using rule 72
	'by'           reduce using rule 72


State 151

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'++'           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'--'           reduce using rule 31
	';'            reduce using rule 31
	'='            reduce using rule 31
	'\\'           reduce using rule 31
	']'            reduce using rule 31
	'bool'         reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'null'         reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'~'            reduce using rule 31
	'for'          reduce using rule 31
	'to'           reduce using rule 31
	'down'         reduce using rule 31
	'by'           reduce using rule 31
	L_integ        reduce using rule 31
	L_CIdent       reduce using rule 31
	L_VIdent       reduce using rule 31


State 152

	Stmt -> 'for' '(' VIdent 'in' Expr . ')' Stmt       (rule 36)

	')'            shift, and enter state 156


State 153

	Stmt -> 'for' '(' VIdent '=' Expr . 'to' Expr ')' Stmt    (rule 32)
	Stmt -> 'for' '(' VIdent '=' Expr . 'to' Expr 'by' Expr ')' Stmt    (rule 33)
	Stmt -> 'for' '(' VIdent '=' Expr . 'down' 'to' Expr ')' Stmt    (rule 34)
	Stmt -> 'for' '(' VIdent '=' Expr . 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 35)

	'to'           shift, and enter state 154
	'down'         shift, and enter state 155


State 154

	Stmt -> 'for' '(' VIdent '=' Expr 'to' . Expr ')' Stmt    (rule 32)
	Stmt -> 'for' '(' VIdent '=' Expr 'to' . Expr 'by' Expr ')' Stmt    (rule 33)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 161
	UnaryOp        goto state 57

State 155

	Stmt -> 'for' '(' VIdent '=' Expr 'down' . 'to' Expr ')' Stmt    (rule 34)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' . 'to' Expr 'by' Expr ')' Stmt    (rule 35)

	'to'           shift, and enter state 160


State 156

	Stmt -> 'for' '(' VIdent 'in' Expr ')' . Stmt       (rule 36)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 159
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 157

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 30)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 158
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 158

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'++'           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'--'           reduce using rule 30
	';'            reduce using rule 30
	'='            reduce using rule 30
	'\\'           reduce using rule 30
	']'            reduce using rule 30
	'bool'         reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'null'         reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'~'            reduce using rule 30
	'for'          reduce using rule 30
	'to'           reduce using rule 30
	'down'         reduce using rule 30
	'by'           reduce using rule 30
	L_integ        reduce using rule 30
	L_CIdent       reduce using rule 30
	L_VIdent       reduce using rule 30


State 159

	Stmt -> 'for' '(' VIdent 'in' Expr ')' Stmt .       (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'++'           reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'--'           reduce using rule 36
	';'            reduce using rule 36
	'='            reduce using rule 36
	'\\'           reduce using rule 36
	']'            reduce using rule 36
	'bool'         reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'new'          reduce using rule 36
	'null'         reduce using rule 36
	'return'       reduce using rule 36
	'true'         reduce using rule 36
	'void'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	'~'            reduce using rule 36
	'for'          reduce using rule 36
	'to'           reduce using rule 36
	'down'         reduce using rule 36
	'by'           reduce using rule 36
	L_integ        reduce using rule 36
	L_CIdent       reduce using rule 36
	L_VIdent       reduce using rule 36


State 160

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' . Expr ')' Stmt    (rule 34)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' . Expr 'by' Expr ')' Stmt    (rule 35)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 164
	UnaryOp        goto state 57

State 161

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr . ')' Stmt    (rule 32)
	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr . 'by' Expr ')' Stmt    (rule 33)

	')'            shift, and enter state 162
	'by'           shift, and enter state 163


State 162

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr ')' . Stmt    (rule 32)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 168
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 163

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' . Expr ')' Stmt    (rule 33)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 167
	UnaryOp        goto state 57

State 164

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr . ')' Stmt    (rule 34)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr . 'by' Expr ')' Stmt    (rule 35)

	')'            shift, and enter state 165
	'by'           shift, and enter state 166


State 165

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr ')' . Stmt    (rule 34)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 171
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 166

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' . Expr ')' Stmt    (rule 35)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'\\'           shift, and enter state 62
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	'~'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	VIdent         goto state 46
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 170
	UnaryOp        goto state 57

State 167

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' Expr . ')' Stmt    (rule 33)

	')'            shift, and enter state 169


State 168

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr ')' Stmt .    (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'++'           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'--'           reduce using rule 32
	';'            reduce using rule 32
	'='            reduce using rule 32
	'\\'           reduce using rule 32
	']'            reduce using rule 32
	'bool'         reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'null'         reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'~'            reduce using rule 32
	'for'          reduce using rule 32
	'to'           reduce using rule 32
	'down'         reduce using rule 32
	'by'           reduce using rule 32
	L_integ        reduce using rule 32
	L_CIdent       reduce using rule 32
	L_VIdent       reduce using rule 32


State 169

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' Expr ')' . Stmt    (rule 33)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 173
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 170

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr . ')' Stmt    (rule 35)

	')'            shift, and enter state 172


State 171

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr ')' Stmt .    (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'++'           reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'--'           reduce using rule 34
	';'            reduce using rule 34
	'='            reduce using rule 34
	'\\'           reduce using rule 34
	']'            reduce using rule 34
	'bool'         reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'null'         reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	'~'            reduce using rule 34
	'for'          reduce using rule 34
	'to'           reduce using rule 34
	'down'         reduce using rule 34
	'by'           reduce using rule 34
	L_integ        reduce using rule 34
	L_CIdent       reduce using rule 34
	L_VIdent       reduce using rule 34


State 172

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' . Stmt    (rule 35)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'\\'           shift, and enter state 62
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'true'         shift, and enter state 68
	'void'         shift, and enter state 11
	'while'        shift, and enter state 69
	'{'            shift, and enter state 40
	'~'            shift, and enter state 71
	'for'          shift, and enter state 72
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 45
	CIdent         goto state 3
	VIdent         goto state 46
	Block          goto state 47
	Stmt           goto state 174
	Type           goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56
	UnaryOp        goto state 57

State 173

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' Expr ')' Stmt .    (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'++'           reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'--'           reduce using rule 33
	';'            reduce using rule 33
	'='            reduce using rule 33
	'\\'           reduce using rule 33
	']'            reduce using rule 33
	'bool'         reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'null'         reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'~'            reduce using rule 33
	'for'          reduce using rule 33
	'to'           reduce using rule 33
	'down'         reduce using rule 33
	'by'           reduce using rule 33
	L_integ        reduce using rule 33
	L_CIdent       reduce using rule 33
	L_VIdent       reduce using rule 33


State 174

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt .    (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'++'           reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'--'           reduce using rule 35
	';'            reduce using rule 35
	'='            reduce using rule 35
	'\\'           reduce using rule 35
	']'            reduce using rule 35
	'bool'         reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'new'          reduce using rule 35
	'null'         reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	'~'            reduce using rule 35
	'for'          reduce using rule 35
	'to'           reduce using rule 35
	'down'         reduce using rule 35
	'by'           reduce using rule 35
	L_integ        reduce using rule 35
	L_CIdent       reduce using rule 35
	L_VIdent       reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 97
Number of terminals: 55
Number of non-terminals: 31
Number of states: 175
