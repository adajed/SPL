-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from src/ParSPL.y
-----------------------------------------------------------------------------

state 43 contains 1 reduce/reduce conflicts.
state 145 contains 4 shift/reduce conflicts.
state 146 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	Program -> ListTopDef                              (3)
	TopDef -> Type Ident '(' ListArgument ')' Block    (4)
	TopDef -> 'class' Ident '{' ListClassArgument '}'   (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Argument -> Type Ident                             (8)
	ListArgument ->                                    (9)
	ListArgument -> Argument                           (10)
	ListArgument -> Argument ',' ListArgument          (11)
	ClassArgument -> Type ListIdent ';'                (12)
	ListIdent -> Ident                                 (13)
	ListIdent -> Ident ',' ListIdent                   (14)
	ListClassArgument ->                               (15)
	ListClassArgument -> ListClassArgument ClassArgument   (16)
	Block -> '{' ListStmt '}'                          (17)
	ListStmt ->                                        (18)
	ListStmt -> ListStmt Stmt                          (19)
	Stmt -> ';'                                        (20)
	Stmt -> Block                                      (21)
	Stmt -> Type ListItem ';'                          (22)
	Stmt -> Expr '=' Expr ';'                          (23)
	Stmt -> Expr '++' ';'                              (24)
	Stmt -> Expr '--' ';'                              (25)
	Stmt -> 'return' Expr ';'                          (26)
	Stmt -> 'return' ';'                               (27)
	Stmt -> 'if' '(' Expr ')' Stmt                     (28)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (29)
	Stmt -> 'while' '(' Expr ')' Stmt                  (30)
	Stmt -> Expr ';'                                   (31)
	Item -> Ident                                      (32)
	Item -> Ident '=' Expr                             (33)
	ListItem -> Item                                   (34)
	ListItem -> Item ',' ListItem                      (35)
	Type -> 'int'                                      (36)
	Type -> 'bool'                                     (37)
	Type -> 'void'                                     (38)
	Type -> Ident                                      (39)
	Type -> Type '[]'                                  (40)
	Type -> Type '(' ListType ')'                      (41)
	ListType ->                                        (42)
	ListType -> Type                                   (43)
	ListType -> Type ',' ListType                      (44)
	Expr6 -> 'null'                                    (45)
	Expr6 -> Integer                                   (46)
	Expr6 -> 'true'                                    (47)
	Expr6 -> 'false'                                   (48)
	Expr6 -> Ident                                     (49)
	Expr6 -> Expr6 '.' Ident                           (50)
	Expr6 -> Expr6 '[' Expr ']'                        (51)
	Expr6 -> Expr6 '(' ListExpr ')'                    (52)
	Expr6 -> '(' Expr ')'                              (53)
	Expr5 -> UnaryOp Expr5                             (54)
	Expr5 -> Expr6                                     (55)
	Expr4 -> Expr4 MulOp Expr5                         (56)
	Expr4 -> Expr5                                     (57)
	Expr3 -> Expr3 AddOp Expr4                         (58)
	Expr3 -> Expr4                                     (59)
	Expr2 -> Expr2 RelOp Expr3                         (60)
	Expr2 -> Expr3                                     (61)
	Expr1 -> Expr2 '&&' Expr1                          (62)
	Expr1 -> Expr2                                     (63)
	Expr -> Expr1 '||' Expr                            (64)
	Expr -> 'new' Ident                                (65)
	Expr -> 'new' Type '[' Expr ']'                    (66)
	Expr -> '\\' Type Ident '->' Expr                  (67)
	Expr -> '\\' Type Ident '->' Stmt                  (68)
	Expr -> Expr1                                      (69)
	ListExpr ->                                        (70)
	ListExpr -> Expr                                   (71)
	ListExpr -> Expr ',' ListExpr                      (72)
	UnaryOp -> '-'                                     (73)
	UnaryOp -> '!'                                     (74)
	UnaryOp -> '~'                                     (75)
	AddOp -> '+'                                       (76)
	AddOp -> '-'                                       (77)
	MulOp -> '*'                                       (78)
	MulOp -> '/'                                       (79)
	MulOp -> '%'                                       (80)
	MulOp -> '<<'                                      (81)
	MulOp -> '>>'                                      (82)
	MulOp -> '&'                                       (83)
	MulOp -> '|'                                       (84)
	MulOp -> '^'                                       (85)
	RelOp -> '<'                                       (86)
	RelOp -> '<='                                      (87)
	RelOp -> '>'                                       (88)
	RelOp -> '>='                                      (89)
	RelOp -> '=='                                      (90)
	RelOp -> '!='                                      (91)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'->'           { PT _ (TS _ 14) }
	'.'            { PT _ (TS _ 15) }
	'/'            { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<<'           { PT _ (TS _ 19) }
	'<='           { PT _ (TS _ 20) }
	'='            { PT _ (TS _ 21) }
	'=='           { PT _ (TS _ 22) }
	'>'            { PT _ (TS _ 23) }
	'>='           { PT _ (TS _ 24) }
	'>>'           { PT _ (TS _ 25) }
	'['            { PT _ (TS _ 26) }
	'[]'           { PT _ (TS _ 27) }
	'\\'           { PT _ (TS _ 28) }
	']'            { PT _ (TS _ 29) }
	'^'            { PT _ (TS _ 30) }
	'bool'         { PT _ (TS _ 31) }
	'class'        { PT _ (TS _ 32) }
	'else'         { PT _ (TS _ 33) }
	'false'        { PT _ (TS _ 34) }
	'if'           { PT _ (TS _ 35) }
	'int'          { PT _ (TS _ 36) }
	'new'          { PT _ (TS _ 37) }
	'null'         { PT _ (TS _ 38) }
	'return'       { PT _ (TS _ 39) }
	'true'         { PT _ (TS _ 40) }
	'void'         { PT _ (TS _ 41) }
	'while'        { PT _ (TS _ 42) }
	'{'            { PT _ (TS _ 43) }
	'|'            { PT _ (TS _ 44) }
	'||'           { PT _ (TS _ 45) }
	'}'            { PT _ (TS _ 46) }
	'~'            { PT _ (TS _ 47) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	Program         rule  3
	TopDef          rules 4, 5
	ListTopDef      rules 6, 7
	Argument        rule  8
	ListArgument    rules 9, 10, 11
	ClassArgument   rule  12
	ListIdent       rules 13, 14
	ListClassArgument rules 15, 16
	Block           rule  17
	ListStmt        rules 18, 19
	Stmt            rules 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
	Item            rules 32, 33
	ListItem        rules 34, 35
	Type            rules 36, 37, 38, 39, 40, 41
	ListType        rules 42, 43, 44
	Expr6           rules 45, 46, 47, 48, 49, 50, 51, 52, 53
	Expr5           rules 54, 55
	Expr4           rules 56, 57
	Expr3           rules 58, 59
	Expr2           rules 60, 61
	Expr1           rules 62, 63
	Expr            rules 64, 65, 66, 67, 68, 69
	ListExpr        rules 70, 71, 72
	UnaryOp         rules 73, 74, 75
	AddOp           rules 76, 77
	MulOp           rules 78, 79, 80, 81, 82, 83, 84, 85
	RelOp           rules 86, 87, 88, 89, 90, 91

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'->'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<<'           reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'>>'           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'{'            reduce using rule 1
	'|'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 39)

	'('            reduce using rule 39
	')'            reduce using rule 39
	','            reduce using rule 39
	'[]'           reduce using rule 39
	L_ident        reduce using rule 39


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'bool'         shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_ident        shift, and enter state 2
	%eof           reduce using rule 6

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 16
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 3)

	%eof           reduce using rule 3


State 7

	TopDef -> Type . Ident '(' ListArgument ')' Block    (rule 4)
	Type -> Type . '[]'                                 (rule 40)
	Type -> Type . '(' ListType ')'                     (rule 41)

	'('            shift, and enter state 14
	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 13

State 8

	Type -> 'bool' .                                    (rule 37)

	'('            reduce using rule 37
	')'            reduce using rule 37
	','            reduce using rule 37
	'['            reduce using rule 37
	'[]'           reduce using rule 37
	L_ident        reduce using rule 37


State 9

	TopDef -> 'class' . Ident '{' ListClassArgument '}'    (rule 5)

	L_ident        shift, and enter state 2

	Ident          goto state 12

State 10

	Type -> 'int' .                                     (rule 36)

	'('            reduce using rule 36
	')'            reduce using rule 36
	','            reduce using rule 36
	'['            reduce using rule 36
	'[]'           reduce using rule 36
	L_ident        reduce using rule 36


State 11

	Type -> 'void' .                                    (rule 38)

	'('            reduce using rule 38
	')'            reduce using rule 38
	','            reduce using rule 38
	'['            reduce using rule 38
	'[]'           reduce using rule 38
	L_ident        reduce using rule 38


State 12

	TopDef -> 'class' Ident . '{' ListClassArgument '}'    (rule 5)

	'{'            shift, and enter state 20


State 13

	TopDef -> Type Ident . '(' ListArgument ')' Block    (rule 4)

	'('            shift, and enter state 19


State 14

	Type -> Type '(' . ListType ')'                     (rule 41)

	')'            reduce using rule 42
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 17
	ListType       goto state 18

State 15

	Type -> Type '[]' .                                 (rule 40)

	'('            reduce using rule 40
	')'            reduce using rule 40
	','            reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	L_ident        reduce using rule 40


State 16

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 17

	Type -> Type . '[]'                                 (rule 40)
	Type -> Type . '(' ListType ')'                     (rule 41)
	ListType -> Type .                                  (rule 43)
	ListType -> Type . ',' ListType                     (rule 44)

	'('            shift, and enter state 14
	')'            reduce using rule 43
	','            shift, and enter state 26
	'[]'           shift, and enter state 15


State 18

	Type -> Type '(' ListType . ')'                     (rule 41)

	')'            shift, and enter state 25


State 19

	TopDef -> Type Ident '(' . ListArgument ')' Block    (rule 4)

	')'            reduce using rule 9
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Argument       goto state 22
	ListArgument   goto state 23
	Type           goto state 24

State 20

	TopDef -> 'class' Ident '{' . ListClassArgument '}'    (rule 5)

	'bool'         reduce using rule 15
	'int'          reduce using rule 15
	'void'         reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15

	ListClassArgumentgoto state 21

State 21

	TopDef -> 'class' Ident '{' ListClassArgument . '}'    (rule 5)
	ListClassArgument -> ListClassArgument . ClassArgument    (rule 16)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	'}'            shift, and enter state 33
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClassArgument  goto state 31
	Type           goto state 32

State 22

	ListArgument -> Argument .                          (rule 10)
	ListArgument -> Argument . ',' ListArgument         (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 30


State 23

	TopDef -> Type Ident '(' ListArgument . ')' Block    (rule 4)

	')'            shift, and enter state 29


State 24

	Argument -> Type . Ident                            (rule 8)
	Type -> Type . '[]'                                 (rule 40)
	Type -> Type . '(' ListType ')'                     (rule 41)

	'('            shift, and enter state 14
	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 28

State 25

	Type -> Type '(' ListType ')' .                     (rule 41)

	'('            reduce using rule 41
	')'            reduce using rule 41
	','            reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	L_ident        reduce using rule 41


State 26

	ListType -> Type ',' . ListType                     (rule 44)

	')'            reduce using rule 42
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 17
	ListType       goto state 27

State 27

	ListType -> Type ',' ListType .                     (rule 44)

	')'            reduce using rule 44


State 28

	Argument -> Type Ident .                            (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 29

	TopDef -> Type Ident '(' ListArgument ')' . Block    (rule 4)

	'{'            shift, and enter state 38

	Block          goto state 37

State 30

	ListArgument -> Argument ',' . ListArgument         (rule 11)

	')'            reduce using rule 9
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Argument       goto state 22
	ListArgument   goto state 36
	Type           goto state 24

State 31

	ListClassArgument -> ListClassArgument ClassArgument .    (rule 16)

	'bool'         reduce using rule 16
	'int'          reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16


State 32

	ClassArgument -> Type . ListIdent ';'               (rule 12)
	Type -> Type . '[]'                                 (rule 40)
	Type -> Type . '(' ListType ')'                     (rule 41)

	'('            shift, and enter state 14
	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 34
	ListIdent      goto state 35

State 33

	TopDef -> 'class' Ident '{' ListClassArgument '}' .    (rule 5)

	'bool'         reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 34

	ListIdent -> Ident .                                (rule 13)
	ListIdent -> Ident . ',' ListIdent                  (rule 14)

	','            shift, and enter state 41
	';'            reduce using rule 13


State 35

	ClassArgument -> Type ListIdent . ';'               (rule 12)

	';'            shift, and enter state 40


State 36

	ListArgument -> Argument ',' ListArgument .         (rule 11)

	')'            reduce using rule 11


State 37

	TopDef -> Type Ident '(' ListArgument ')' Block .    (rule 4)

	'bool'         reduce using rule 4
	'class'        reduce using rule 4
	'int'          reduce using rule 4
	'void'         reduce using rule 4
	L_ident        reduce using rule 4
	%eof           reduce using rule 4


State 38

	Block -> '{' . ListStmt '}'                         (rule 17)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'\\'           reduce using rule 18
	'bool'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'null'         reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'~'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18

	ListStmt       goto state 39

State 39

	Block -> '{' ListStmt . '}'                         (rule 17)
	ListStmt -> ListStmt . Stmt                         (rule 19)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'\\'           shift, and enter state 60
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'true'         shift, and enter state 66
	'void'         shift, and enter state 11
	'while'        shift, and enter state 67
	'{'            shift, and enter state 38
	'}'            shift, and enter state 68
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	Block          goto state 45
	Stmt           goto state 46
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	UnaryOp        goto state 55

State 40

	ClassArgument -> Type ListIdent ';' .               (rule 12)

	'bool'         reduce using rule 12
	'int'          reduce using rule 12
	'void'         reduce using rule 12
	'}'            reduce using rule 12
	L_ident        reduce using rule 12


State 41

	ListIdent -> Ident ',' . ListIdent                  (rule 14)

	L_ident        shift, and enter state 2

	Ident          goto state 34
	ListIdent      goto state 42

State 42

	ListIdent -> Ident ',' ListIdent .                  (rule 14)

	';'            reduce using rule 14


State 43

	Type -> Ident .                                     (rule 39)
	Expr6 -> Ident .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
			(reduce using rule 39)

	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<<'           reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'>>'           reduce using rule 49
	'['            reduce using rule 49
	'[]'           reduce using rule 39
	']'            reduce using rule 49
	'^'            reduce using rule 49
	'|'            reduce using rule 49
	'||'           reduce using rule 49
	L_ident        reduce using rule 39


State 44

	Expr6 -> Integer .                                  (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&'            reduce using rule 46
	'&&'           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	'++'           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'--'           reduce using rule 46
	'.'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<<'           reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'>>'           reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'|'            reduce using rule 46
	'||'           reduce using rule 46


State 45

	Stmt -> Block .                                     (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'++'           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'--'           reduce using rule 21
	';'            reduce using rule 21
	'='            reduce using rule 21
	'\\'           reduce using rule 21
	']'            reduce using rule 21
	'bool'         reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'null'         reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'~'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21


State 46

	ListStmt -> ListStmt Stmt .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'\\'           reduce using rule 19
	'bool'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'null'         reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'~'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19


State 47

	Stmt -> Type . ListItem ';'                         (rule 22)
	Type -> Type . '[]'                                 (rule 40)
	Type -> Type . '(' ListType ')'                     (rule 41)

	'('            shift, and enter state 14
	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 109
	Item           goto state 110
	ListItem       goto state 111

State 48

	Expr6 -> Expr6 . '.' Ident                          (rule 50)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 51)
	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 52)
	Expr5 -> Expr6 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            shift, and enter state 106
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'.'            shift, and enter state 107
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<<'           reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'>>'           reduce using rule 55
	'['            shift, and enter state 108
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'|'            reduce using rule 55
	'||'           reduce using rule 55


State 49

	Expr4 -> Expr5 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<<'           reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'>>'           reduce using rule 57
	']'            reduce using rule 57
	'^'            reduce using rule 57
	'|'            reduce using rule 57
	'||'           reduce using rule 57


State 50

	Expr4 -> Expr4 . MulOp Expr5                        (rule 56)
	Expr3 -> Expr4 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            shift, and enter state 98
	'&'            shift, and enter state 99
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            shift, and enter state 100
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'/'            shift, and enter state 101
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<<'           shift, and enter state 102
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'>>'           shift, and enter state 103
	']'            reduce using rule 59
	'^'            shift, and enter state 104
	'|'            shift, and enter state 105
	'||'           reduce using rule 59

	MulOp          goto state 97

State 51

	Expr3 -> Expr3 . AddOp Expr4                        (rule 58)
	Expr2 -> Expr3 .                                    (rule 61)

	'!='           reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'+'            shift, and enter state 95
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            shift, and enter state 96
	'--'           reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61

	AddOp          goto state 94

State 52

	Expr2 -> Expr2 . RelOp Expr3                        (rule 60)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 62)
	Expr1 -> Expr2 .                                    (rule 63)

	'!='           shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'--'           reduce using rule 63
	';'            reduce using rule 63
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'='            reduce using rule 63
	'=='           shift, and enter state 91
	'>'            shift, and enter state 92
	'>='           shift, and enter state 93
	']'            reduce using rule 63
	'||'           reduce using rule 63

	RelOp          goto state 86

State 53

	Expr -> Expr1 . '||' Expr                           (rule 64)
	Expr -> Expr1 .                                     (rule 69)

	')'            reduce using rule 69
	'++'           reduce using rule 69
	','            reduce using rule 69
	'--'           reduce using rule 69
	';'            reduce using rule 69
	'='            reduce using rule 69
	']'            reduce using rule 69
	'||'           shift, and enter state 85


State 54

	Stmt -> Expr . '=' Expr ';'                         (rule 23)
	Stmt -> Expr . '++' ';'                             (rule 24)
	Stmt -> Expr . '--' ';'                             (rule 25)
	Stmt -> Expr . ';'                                  (rule 31)

	'++'           shift, and enter state 81
	'--'           shift, and enter state 82
	';'            shift, and enter state 83
	'='            shift, and enter state 84


State 55

	Expr5 -> UnaryOp . Expr5                            (rule 54)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 61
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 80
	UnaryOp        goto state 55

State 56

	UnaryOp -> '!' .                                    (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'null'         reduce using rule 74
	'true'         reduce using rule 74
	'~'            reduce using rule 74
	L_ident        reduce using rule 74
	L_integ        reduce using rule 74


State 57

	Expr6 -> '(' . Expr ')'                             (rule 53)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 79
	UnaryOp        goto state 55

State 58

	UnaryOp -> '-' .                                    (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'null'         reduce using rule 73
	'true'         reduce using rule 73
	'~'            reduce using rule 73
	L_ident        reduce using rule 73
	L_integ        reduce using rule 73


State 59

	Stmt -> ';' .                                       (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'++'           reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'--'           reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	'\\'           reduce using rule 20
	']'            reduce using rule 20
	'bool'         reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'null'         reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'~'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20


State 60

	Expr -> '\\' . Type Ident '->' Expr                 (rule 67)
	Expr -> '\\' . Type Ident '->' Stmt                 (rule 68)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 78

State 61

	Expr6 -> 'false' .                                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'--'           reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<<'           reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'>>'           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'^'            reduce using rule 48
	'|'            reduce using rule 48
	'||'           reduce using rule 48


State 62

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 28)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 29)

	'('            shift, and enter state 77


State 63

	Expr -> 'new' . Ident                               (rule 65)
	Expr -> 'new' . Type '[' Expr ']'                   (rule 66)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_ident        shift, and enter state 2

	Ident          goto state 75
	Type           goto state 76

State 64

	Expr6 -> 'null' .                                   (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&'            reduce using rule 45
	'&&'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	'++'           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           reduce using rule 45
	'.'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<<'           reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'>>'           reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'^'            reduce using rule 45
	'|'            reduce using rule 45
	'||'           reduce using rule 45


State 65

	Stmt -> 'return' . Expr ';'                         (rule 26)
	Stmt -> 'return' . ';'                              (rule 27)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 74
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 73
	UnaryOp        goto state 55

State 66

	Expr6 -> 'true' .                                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'--'           reduce using rule 47
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<<'           reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'>>'           reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'|'            reduce using rule 47
	'||'           reduce using rule 47


State 67

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 30)

	'('            shift, and enter state 71


State 68

	Block -> '{' ListStmt '}' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'++'           reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	'--'           reduce using rule 17
	';'            reduce using rule 17
	'='            reduce using rule 17
	'\\'           reduce using rule 17
	']'            reduce using rule 17
	'bool'         reduce using rule 17
	'class'        reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'new'          reduce using rule 17
	'null'         reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'~'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17
	%eof           reduce using rule 17


State 69

	UnaryOp -> '~' .                                    (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'null'         reduce using rule 75
	'true'         reduce using rule 75
	'~'            reduce using rule 75
	L_ident        reduce using rule 75
	L_integ        reduce using rule 75


State 70

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<<'           reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'>>'           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'^'            reduce using rule 2
	'|'            reduce using rule 2
	'||'           reduce using rule 2


State 71

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 30)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 132
	UnaryOp        goto state 55

State 72

	Expr6 -> Ident .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<<'           reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'>>'           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'^'            reduce using rule 49
	'|'            reduce using rule 49
	'||'           reduce using rule 49


State 73

	Stmt -> 'return' Expr . ';'                         (rule 26)

	';'            shift, and enter state 131


State 74

	Stmt -> 'return' ';' .                              (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'++'           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'--'           reduce using rule 27
	';'            reduce using rule 27
	'='            reduce using rule 27
	'\\'           reduce using rule 27
	']'            reduce using rule 27
	'bool'         reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'null'         reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'~'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27


State 75

	Type -> Ident .                                     (rule 39)
	Expr -> 'new' Ident .                               (rule 65)

	'('            reduce using rule 39
	')'            reduce using rule 65
	'++'           reduce using rule 65
	','            reduce using rule 65
	'--'           reduce using rule 65
	';'            reduce using rule 65
	'='            reduce using rule 65
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	']'            reduce using rule 65


State 76

	Type -> Type . '[]'                                 (rule 40)
	Type -> Type . '(' ListType ')'                     (rule 41)
	Expr -> 'new' Type . '[' Expr ']'                   (rule 66)

	'('            shift, and enter state 14
	'['            shift, and enter state 130
	'[]'           shift, and enter state 15


State 77

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 28)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 29)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 129
	UnaryOp        goto state 55

State 78

	Type -> Type . '[]'                                 (rule 40)
	Type -> Type . '(' ListType ')'                     (rule 41)
	Expr -> '\\' Type . Ident '->' Expr                 (rule 67)
	Expr -> '\\' Type . Ident '->' Stmt                 (rule 68)

	'('            shift, and enter state 14
	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 128

State 79

	Expr6 -> '(' Expr . ')'                             (rule 53)

	')'            shift, and enter state 127


State 80

	Expr5 -> UnaryOp Expr5 .                            (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<<'           reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'>>'           reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'|'            reduce using rule 54
	'||'           reduce using rule 54


State 81

	Stmt -> Expr '++' . ';'                             (rule 24)

	';'            shift, and enter state 126


State 82

	Stmt -> Expr '--' . ';'                             (rule 25)

	';'            shift, and enter state 125


State 83

	Stmt -> Expr ';' .                                  (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'++'           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'--'           reduce using rule 31
	';'            reduce using rule 31
	'='            reduce using rule 31
	'\\'           reduce using rule 31
	']'            reduce using rule 31
	'bool'         reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'null'         reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'~'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31


State 84

	Stmt -> Expr '=' . Expr ';'                         (rule 23)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 124
	UnaryOp        goto state 55

State 85

	Expr -> Expr1 '||' . Expr                           (rule 64)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 123
	UnaryOp        goto state 55

State 86

	Expr2 -> Expr2 RelOp . Expr3                        (rule 60)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 61
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 122
	UnaryOp        goto state 55

State 87

	RelOp -> '!=' .                                     (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'false'        reduce using rule 91
	'null'         reduce using rule 91
	'true'         reduce using rule 91
	'~'            reduce using rule 91
	L_ident        reduce using rule 91
	L_integ        reduce using rule 91


State 88

	Expr1 -> Expr2 '&&' . Expr1                         (rule 62)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 61
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 121
	UnaryOp        goto state 55

State 89

	RelOp -> '<' .                                      (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'null'         reduce using rule 86
	'true'         reduce using rule 86
	'~'            reduce using rule 86
	L_ident        reduce using rule 86
	L_integ        reduce using rule 86


State 90

	RelOp -> '<=' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'null'         reduce using rule 87
	'true'         reduce using rule 87
	'~'            reduce using rule 87
	L_ident        reduce using rule 87
	L_integ        reduce using rule 87


State 91

	RelOp -> '==' .                                     (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'null'         reduce using rule 90
	'true'         reduce using rule 90
	'~'            reduce using rule 90
	L_ident        reduce using rule 90
	L_integ        reduce using rule 90


State 92

	RelOp -> '>' .                                      (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'null'         reduce using rule 88
	'true'         reduce using rule 88
	'~'            reduce using rule 88
	L_ident        reduce using rule 88
	L_integ        reduce using rule 88


State 93

	RelOp -> '>=' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'null'         reduce using rule 89
	'true'         reduce using rule 89
	'~'            reduce using rule 89
	L_ident        reduce using rule 89
	L_integ        reduce using rule 89


State 94

	Expr3 -> Expr3 AddOp . Expr4                        (rule 58)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 61
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 120
	UnaryOp        goto state 55

State 95

	AddOp -> '+' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'null'         reduce using rule 76
	'true'         reduce using rule 76
	'~'            reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76


State 96

	AddOp -> '-' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'null'         reduce using rule 77
	'true'         reduce using rule 77
	'~'            reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77


State 97

	Expr4 -> Expr4 MulOp . Expr5                        (rule 56)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 61
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 119
	UnaryOp        goto state 55

State 98

	MulOp -> '%' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'null'         reduce using rule 80
	'true'         reduce using rule 80
	'~'            reduce using rule 80
	L_ident        reduce using rule 80
	L_integ        reduce using rule 80


State 99

	MulOp -> '&' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'null'         reduce using rule 83
	'true'         reduce using rule 83
	'~'            reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83


State 100

	MulOp -> '*' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'null'         reduce using rule 78
	'true'         reduce using rule 78
	'~'            reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78


State 101

	MulOp -> '/' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'null'         reduce using rule 79
	'true'         reduce using rule 79
	'~'            reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79


State 102

	MulOp -> '<<' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'null'         reduce using rule 81
	'true'         reduce using rule 81
	'~'            reduce using rule 81
	L_ident        reduce using rule 81
	L_integ        reduce using rule 81


State 103

	MulOp -> '>>' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'null'         reduce using rule 82
	'true'         reduce using rule 82
	'~'            reduce using rule 82
	L_ident        reduce using rule 82
	L_integ        reduce using rule 82


State 104

	MulOp -> '^' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'null'         reduce using rule 85
	'true'         reduce using rule 85
	'~'            reduce using rule 85
	L_ident        reduce using rule 85
	L_integ        reduce using rule 85


State 105

	MulOp -> '|' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'null'         reduce using rule 84
	'true'         reduce using rule 84
	'~'            reduce using rule 84
	L_ident        reduce using rule 84
	L_integ        reduce using rule 84


State 106

	Expr6 -> Expr6 '(' . ListExpr ')'                   (rule 52)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 70
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 117
	ListExpr       goto state 118
	UnaryOp        goto state 55

State 107

	Expr6 -> Expr6 '.' . Ident                          (rule 50)

	L_ident        shift, and enter state 2

	Ident          goto state 116

State 108

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 51)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 115
	UnaryOp        goto state 55

State 109

	Item -> Ident .                                     (rule 32)
	Item -> Ident . '=' Expr                            (rule 33)

	','            reduce using rule 32
	';'            reduce using rule 32
	'='            shift, and enter state 114


State 110

	ListItem -> Item .                                  (rule 34)
	ListItem -> Item . ',' ListItem                     (rule 35)

	','            shift, and enter state 113
	';'            reduce using rule 34


State 111

	Stmt -> Type ListItem . ';'                         (rule 22)

	';'            shift, and enter state 112


State 112

	Stmt -> Type ListItem ';' .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'++'           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'--'           reduce using rule 22
	';'            reduce using rule 22
	'='            reduce using rule 22
	'\\'           reduce using rule 22
	']'            reduce using rule 22
	'bool'         reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'null'         reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'~'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22


State 113

	ListItem -> Item ',' . ListItem                     (rule 35)

	L_ident        shift, and enter state 2

	Ident          goto state 109
	Item           goto state 110
	ListItem       goto state 142

State 114

	Item -> Ident '=' . Expr                            (rule 33)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 141
	UnaryOp        goto state 55

State 115

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 51)

	']'            shift, and enter state 140


State 116

	Expr6 -> Expr6 '.' Ident .                          (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<<'           reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'>>'           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'^'            reduce using rule 50
	'|'            reduce using rule 50
	'||'           reduce using rule 50


State 117

	ListExpr -> Expr .                                  (rule 71)
	ListExpr -> Expr . ',' ListExpr                     (rule 72)

	')'            reduce using rule 71
	','            shift, and enter state 139


State 118

	Expr6 -> Expr6 '(' ListExpr . ')'                   (rule 52)

	')'            shift, and enter state 138


State 119

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<<'           reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'>>'           reduce using rule 56
	']'            reduce using rule 56
	'^'            reduce using rule 56
	'|'            reduce using rule 56
	'||'           reduce using rule 56


State 120

	Expr4 -> Expr4 . MulOp Expr5                        (rule 56)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 58)

	'!='           reduce using rule 58
	'%'            shift, and enter state 98
	'&'            shift, and enter state 99
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            shift, and enter state 100
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'/'            shift, and enter state 101
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<<'           shift, and enter state 102
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'>>'           shift, and enter state 103
	']'            reduce using rule 58
	'^'            shift, and enter state 104
	'|'            shift, and enter state 105
	'||'           reduce using rule 58

	MulOp          goto state 97

State 121

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 62)

	')'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'--'           reduce using rule 62
	';'            reduce using rule 62
	'='            reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 122

	Expr3 -> Expr3 . AddOp Expr4                        (rule 58)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 60)

	'!='           reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'+'            shift, and enter state 95
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            shift, and enter state 96
	'--'           reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60

	AddOp          goto state 94

State 123

	Expr -> Expr1 '||' Expr .                           (rule 64)

	')'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'--'           reduce using rule 64
	';'            reduce using rule 64
	'='            reduce using rule 64
	']'            reduce using rule 64


State 124

	Stmt -> Expr '=' Expr . ';'                         (rule 23)

	';'            shift, and enter state 137


State 125

	Stmt -> Expr '--' ';' .                             (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'++'           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'--'           reduce using rule 25
	';'            reduce using rule 25
	'='            reduce using rule 25
	'\\'           reduce using rule 25
	']'            reduce using rule 25
	'bool'         reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'null'         reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'~'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25


State 126

	Stmt -> Expr '++' ';' .                             (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'++'           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'--'           reduce using rule 24
	';'            reduce using rule 24
	'='            reduce using rule 24
	'\\'           reduce using rule 24
	']'            reduce using rule 24
	'bool'         reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'null'         reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'~'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24


State 127

	Expr6 -> '(' Expr ')' .                             (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<<'           reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'>>'           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'^'            reduce using rule 53
	'|'            reduce using rule 53
	'||'           reduce using rule 53


State 128

	Expr -> '\\' Type Ident . '->' Expr                 (rule 67)
	Expr -> '\\' Type Ident . '->' Stmt                 (rule 68)

	'->'           shift, and enter state 136


State 129

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 28)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 29)

	')'            shift, and enter state 135


State 130

	Expr -> 'new' Type '[' . Expr ']'                   (rule 66)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 134
	UnaryOp        goto state 55

State 131

	Stmt -> 'return' Expr ';' .                         (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'++'           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'--'           reduce using rule 26
	';'            reduce using rule 26
	'='            reduce using rule 26
	'\\'           reduce using rule 26
	']'            reduce using rule 26
	'bool'         reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'null'         reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'~'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26


State 132

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 30)

	')'            shift, and enter state 133


State 133

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 30)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'\\'           shift, and enter state 60
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'true'         shift, and enter state 66
	'void'         shift, and enter state 11
	'while'        shift, and enter state 67
	'{'            shift, and enter state 38
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	Block          goto state 45
	Stmt           goto state 148
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	UnaryOp        goto state 55

State 134

	Expr -> 'new' Type '[' Expr . ']'                   (rule 66)

	']'            shift, and enter state 147


State 135

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 28)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 29)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'\\'           shift, and enter state 60
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'true'         shift, and enter state 66
	'void'         shift, and enter state 11
	'while'        shift, and enter state 67
	'{'            shift, and enter state 38
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	Block          goto state 45
	Stmt           goto state 146
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	UnaryOp        goto state 55

State 136

	Expr -> '\\' Type Ident '->' . Expr                 (rule 67)
	Expr -> '\\' Type Ident '->' . Stmt                 (rule 68)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'\\'           shift, and enter state 60
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'true'         shift, and enter state 66
	'void'         shift, and enter state 11
	'while'        shift, and enter state 67
	'{'            shift, and enter state 38
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	Block          goto state 45
	Stmt           goto state 144
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 145
	UnaryOp        goto state 55

State 137

	Stmt -> Expr '=' Expr ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'++'           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'--'           reduce using rule 23
	';'            reduce using rule 23
	'='            reduce using rule 23
	'\\'           reduce using rule 23
	']'            reduce using rule 23
	'bool'         reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'null'         reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'~'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23


State 138

	Expr6 -> Expr6 '(' ListExpr ')' .                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<<'           reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'>>'           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'^'            reduce using rule 52
	'|'            reduce using rule 52
	'||'           reduce using rule 52


State 139

	ListExpr -> Expr ',' . ListExpr                     (rule 72)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 70
	'-'            shift, and enter state 58
	'\\'           shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'true'         shift, and enter state 66
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 117
	ListExpr       goto state 143
	UnaryOp        goto state 55

State 140

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<<'           reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'>>'           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'^'            reduce using rule 51
	'|'            reduce using rule 51
	'||'           reduce using rule 51


State 141

	Item -> Ident '=' Expr .                            (rule 33)

	','            reduce using rule 33
	';'            reduce using rule 33


State 142

	ListItem -> Item ',' ListItem .                     (rule 35)

	';'            reduce using rule 35


State 143

	ListExpr -> Expr ',' ListExpr .                     (rule 72)

	')'            reduce using rule 72


State 144

	Expr -> '\\' Type Ident '->' Stmt .                 (rule 68)

	')'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'--'           reduce using rule 68
	';'            reduce using rule 68
	'='            reduce using rule 68
	']'            reduce using rule 68


State 145

	Stmt -> Expr . '=' Expr ';'                         (rule 23)
	Stmt -> Expr . '++' ';'                             (rule 24)
	Stmt -> Expr . '--' ';'                             (rule 25)
	Stmt -> Expr . ';'                                  (rule 31)
	Expr -> '\\' Type Ident '->' Expr .                 (rule 67)

	')'            reduce using rule 67
	'++'           shift, and enter state 81
			(reduce using rule 67)

	','            reduce using rule 67
	'--'           shift, and enter state 82
			(reduce using rule 67)

	';'            shift, and enter state 83
			(reduce using rule 67)

	'='            shift, and enter state 84
			(reduce using rule 67)

	']'            reduce using rule 67


State 146

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 28)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 29)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'++'           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'--'           reduce using rule 28
	';'            reduce using rule 28
	'='            reduce using rule 28
	'\\'           reduce using rule 28
	']'            reduce using rule 28
	'bool'         reduce using rule 28
	'else'         shift, and enter state 149
			(reduce using rule 28)

	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'null'         reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'~'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28


State 147

	Expr -> 'new' Type '[' Expr ']' .                   (rule 66)

	')'            reduce using rule 66
	'++'           reduce using rule 66
	','            reduce using rule 66
	'--'           reduce using rule 66
	';'            reduce using rule 66
	'='            reduce using rule 66
	']'            reduce using rule 66


State 148

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'++'           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'--'           reduce using rule 30
	';'            reduce using rule 30
	'='            reduce using rule 30
	'\\'           reduce using rule 30
	']'            reduce using rule 30
	'bool'         reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'null'         reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'~'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30


State 149

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 29)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'\\'           shift, and enter state 60
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'true'         shift, and enter state 66
	'void'         shift, and enter state 11
	'while'        shift, and enter state 67
	'{'            shift, and enter state 38
	'~'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	Block          goto state 45
	Stmt           goto state 150
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	UnaryOp        goto state 55

State 150

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'++'           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'--'           reduce using rule 29
	';'            reduce using rule 29
	'='            reduce using rule 29
	'\\'           reduce using rule 29
	']'            reduce using rule 29
	'bool'         reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'null'         reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'~'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 92
Number of terminals: 49
Number of non-terminals: 30
Number of states: 151
