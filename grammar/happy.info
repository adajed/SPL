-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from grammar/ParSPL.y
-----------------------------------------------------------------------------

state 89 contains 1 shift/reduce conflicts.
state 166 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Integer -> L_integ                                 (1)
	CIdent -> L_CIdent                                 (2)
	VIdent -> L_VIdent                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type VIdent '(' ListArgument ')' Block   (5)
	TopDef -> 'class' CIdent '{' ListClassElem '}'     (6)
	TopDef -> 'class' CIdent 'extends' CIdent '{' ListClassElem '}'   (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Argument -> Type VIdent                            (10)
	ListArgument ->                                    (11)
	ListArgument -> Argument                           (12)
	ListArgument -> Argument ',' ListArgument          (13)
	ClassElem -> Type ListVIdent ';'                   (14)
	ClassElem -> 'constr' '(' ListArgument ')' Block   (15)
	ClassElem -> Type VIdent '(' ListArgument ')' Block   (16)
	ListVIdent -> VIdent                               (17)
	ListVIdent -> VIdent ',' ListVIdent                (18)
	ListClassElem ->                                   (19)
	ListClassElem -> ListClassElem ClassElem           (20)
	Block -> '{' ListStmt '}'                          (21)
	ListStmt ->                                        (22)
	ListStmt -> ListStmt Stmt                          (23)
	Stmt -> ';'                                        (24)
	Stmt -> Block                                      (25)
	Stmt -> Type ListItem ';'                          (26)
	Stmt -> Expr '=' Expr ';'                          (27)
	Stmt -> Expr '++' ';'                              (28)
	Stmt -> Expr '--' ';'                              (29)
	Stmt -> 'return' Expr ';'                          (30)
	Stmt -> 'return' ';'                               (31)
	Stmt -> 'if' '(' Expr ')' Stmt                     (32)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (33)
	Stmt -> 'while' '(' Expr ')' Stmt                  (34)
	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr ')' Stmt   (35)
	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' Expr ')' Stmt   (36)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr ')' Stmt   (37)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt   (38)
	Stmt -> 'for' '(' VIdent 'in' Expr ')' Stmt        (39)
	Stmt -> Expr ';'                                   (40)
	Item -> VIdent                                     (41)
	Item -> VIdent '=' Expr                            (42)
	ListItem -> Item                                   (43)
	ListItem -> Item ',' ListItem                      (44)
	Type -> 'int'                                      (45)
	Type -> 'bool'                                     (46)
	Type -> 'void'                                     (47)
	Type -> CIdent                                     (48)
	Type -> Type '[]'                                  (49)
	Type -> Type '(' ListType ')'                      (50)
	ListType ->                                        (51)
	ListType -> Type                                   (52)
	ListType -> Type ',' ListType                      (53)
	Expr6 -> 'null'                                    (54)
	Expr6 -> Integer                                   (55)
	Expr6 -> 'true'                                    (56)
	Expr6 -> 'false'                                   (57)
	Expr6 -> VIdent                                    (58)
	Expr6 -> Expr6 '.' VIdent                          (59)
	Expr6 -> Expr6 '[' Expr ']'                        (60)
	Expr6 -> Expr6 '(' ListExpr ')'                    (61)
	Expr6 -> '(' Expr ')'                              (62)
	Expr5 -> UnaryOp Expr5                             (63)
	Expr5 -> Expr6                                     (64)
	Expr4 -> Expr4 MulOp Expr5                         (65)
	Expr4 -> Expr5                                     (66)
	Expr3 -> Expr3 AddOp Expr4                         (67)
	Expr3 -> Expr4                                     (68)
	Expr2 -> Expr2 RelOp Expr3                         (69)
	Expr2 -> Expr3                                     (70)
	Expr1 -> Expr2 '&&' Expr1                          (71)
	Expr1 -> Expr2                                     (72)
	Expr -> Expr1 '||' Expr                            (73)
	Expr -> 'new' CIdent '(' ListExpr ')'              (74)
	Expr -> 'new' Type '[' Expr ']'                    (75)
	Expr -> '\\' ListArgument '->' Stmt                (76)
	Expr -> Expr1                                      (77)
	ListExpr ->                                        (78)
	ListExpr -> Expr                                   (79)
	ListExpr -> Expr ',' ListExpr                      (80)
	UnaryOp -> '-'                                     (81)
	UnaryOp -> '!'                                     (82)
	UnaryOp -> '~'                                     (83)
	AddOp -> '+'                                       (84)
	AddOp -> '-'                                       (85)
	MulOp -> '*'                                       (86)
	MulOp -> '/'                                       (87)
	MulOp -> '%'                                       (88)
	MulOp -> '<<'                                      (89)
	MulOp -> '>>'                                      (90)
	MulOp -> '&'                                       (91)
	MulOp -> '|'                                       (92)
	MulOp -> '^'                                       (93)
	RelOp -> '<'                                       (94)
	RelOp -> '<='                                      (95)
	RelOp -> '>'                                       (96)
	RelOp -> '>='                                      (97)
	RelOp -> '=='                                      (98)
	RelOp -> '!='                                      (99)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'->'           { PT _ (TS _ 14) }
	'.'            { PT _ (TS _ 15) }
	'/'            { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<<'           { PT _ (TS _ 19) }
	'<='           { PT _ (TS _ 20) }
	'='            { PT _ (TS _ 21) }
	'=='           { PT _ (TS _ 22) }
	'>'            { PT _ (TS _ 23) }
	'>='           { PT _ (TS _ 24) }
	'>>'           { PT _ (TS _ 25) }
	'['            { PT _ (TS _ 26) }
	'[]'           { PT _ (TS _ 27) }
	'\\'           { PT _ (TS _ 28) }
	']'            { PT _ (TS _ 29) }
	'^'            { PT _ (TS _ 30) }
	'bool'         { PT _ (TS _ 31) }
	'class'        { PT _ (TS _ 32) }
	'else'         { PT _ (TS _ 33) }
	'false'        { PT _ (TS _ 34) }
	'if'           { PT _ (TS _ 35) }
	'int'          { PT _ (TS _ 36) }
	'new'          { PT _ (TS _ 37) }
	'null'         { PT _ (TS _ 38) }
	'return'       { PT _ (TS _ 39) }
	'true'         { PT _ (TS _ 40) }
	'void'         { PT _ (TS _ 41) }
	'while'        { PT _ (TS _ 42) }
	'{'            { PT _ (TS _ 43) }
	'|'            { PT _ (TS _ 44) }
	'||'           { PT _ (TS _ 45) }
	'}'            { PT _ (TS _ 46) }
	'~'            { PT _ (TS _ 47) }
	'for'          { PT _ (TS _ 48) }
	'to'           { PT _ (TS _ 49) }
	'down'         { PT _ (TS _ 50) }
	'in'           { PT _ (TS _ 51) }
	'by'           { PT _ (TS _ 52) }
	'extends'      { PT _ (TS _ 53) }
	'constr'       { PT _ (TS _ 54) }
	L_integ        { PT _ (TI _) }
	L_CIdent       { PT _ (T_CIdent _) }
	L_VIdent       { PT _ (T_VIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Integer         rule  1
	CIdent          rule  2
	VIdent          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	Argument        rule  10
	ListArgument    rules 11, 12, 13
	ClassElem       rules 14, 15, 16
	ListVIdent      rules 17, 18
	ListClassElem   rules 19, 20
	Block           rule  21
	ListStmt        rules 22, 23
	Stmt            rules 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
	Item            rules 41, 42
	ListItem        rules 43, 44
	Type            rules 45, 46, 47, 48, 49, 50
	ListType        rules 51, 52, 53
	Expr6           rules 54, 55, 56, 57, 58, 59, 60, 61, 62
	Expr5           rules 63, 64
	Expr4           rules 65, 66
	Expr3           rules 67, 68
	Expr2           rules 69, 70
	Expr1           rules 71, 72
	Expr            rules 73, 74, 75, 76, 77
	ListExpr        rules 78, 79, 80
	UnaryOp         rules 81, 82, 83
	AddOp           rules 84, 85
	MulOp           rules 86, 87, 88, 89, 90, 91, 92, 93
	RelOp           rules 94, 95, 96, 97, 98, 99

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<<'           reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'>>'           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'|'            reduce using rule 1
	'||'           reduce using rule 1
	'to'           reduce using rule 1
	'down'         reduce using rule 1
	'by'           reduce using rule 1


State 3

	Type -> CIdent .                                    (rule 48)

	'('            reduce using rule 48
	')'            reduce using rule 48
	','            reduce using rule 48
	'[]'           reduce using rule 48
	L_VIdent       reduce using rule 48


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'bool'         shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12
	%eof           reduce using rule 8

	CIdent         goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 18
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . VIdent '(' ListArgument ')' Block    (rule 5)
	Type -> Type . '[]'                                 (rule 49)
	Type -> Type . '(' ListType ')'                     (rule 50)

	'('            shift, and enter state 15
	'[]'           shift, and enter state 16
	L_VIdent       shift, and enter state 17

	VIdent         goto state 14

State 8

	Type -> 'bool' .                                    (rule 46)

	'('            reduce using rule 46
	')'            reduce using rule 46
	','            reduce using rule 46
	'['            reduce using rule 46
	'[]'           reduce using rule 46
	L_VIdent       reduce using rule 46


State 9

	TopDef -> 'class' . CIdent '{' ListClassElem '}'    (rule 6)
	TopDef -> 'class' . CIdent 'extends' CIdent '{' ListClassElem '}'    (rule 7)

	L_CIdent       shift, and enter state 12

	CIdent         goto state 13

State 10

	Type -> 'int' .                                     (rule 45)

	'('            reduce using rule 45
	')'            reduce using rule 45
	','            reduce using rule 45
	'['            reduce using rule 45
	'[]'           reduce using rule 45
	L_VIdent       reduce using rule 45


State 11

	Type -> 'void' .                                    (rule 47)

	'('            reduce using rule 47
	')'            reduce using rule 47
	','            reduce using rule 47
	'['            reduce using rule 47
	'[]'           reduce using rule 47
	L_VIdent       reduce using rule 47


State 12

	CIdent -> L_CIdent .                                (rule 2)

	'('            reduce using rule 2
	')'            reduce using rule 2
	','            reduce using rule 2
	'['            reduce using rule 2
	'[]'           reduce using rule 2
	'{'            reduce using rule 2
	'extends'      reduce using rule 2
	L_VIdent       reduce using rule 2


State 13

	TopDef -> 'class' CIdent . '{' ListClassElem '}'    (rule 6)
	TopDef -> 'class' CIdent . 'extends' CIdent '{' ListClassElem '}'    (rule 7)

	'{'            shift, and enter state 22
	'extends'      shift, and enter state 23


State 14

	TopDef -> Type VIdent . '(' ListArgument ')' Block    (rule 5)

	'('            shift, and enter state 21


State 15

	Type -> Type '(' . ListType ')'                     (rule 50)

	')'            reduce using rule 51
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Type           goto state 19
	ListType       goto state 20

State 16

	Type -> Type '[]' .                                 (rule 49)

	'('            reduce using rule 49
	')'            reduce using rule 49
	','            reduce using rule 49
	'['            reduce using rule 49
	'[]'           reduce using rule 49
	L_VIdent       reduce using rule 49


State 17

	VIdent -> L_VIdent .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'->'           reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<<'           reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'>>'           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'^'            reduce using rule 3
	'|'            reduce using rule 3
	'||'           reduce using rule 3
	'to'           reduce using rule 3
	'down'         reduce using rule 3
	'in'           reduce using rule 3
	'by'           reduce using rule 3


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 19

	Type -> Type . '[]'                                 (rule 49)
	Type -> Type . '(' ListType ')'                     (rule 50)
	ListType -> Type .                                  (rule 52)
	ListType -> Type . ',' ListType                     (rule 53)

	'('            shift, and enter state 15
	')'            reduce using rule 52
	','            shift, and enter state 30
	'[]'           shift, and enter state 16


State 20

	Type -> Type '(' ListType . ')'                     (rule 50)

	')'            shift, and enter state 29


State 21

	TopDef -> Type VIdent '(' . ListArgument ')' Block    (rule 5)

	')'            reduce using rule 11
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Argument       goto state 26
	ListArgument   goto state 27
	Type           goto state 28

State 22

	TopDef -> 'class' CIdent '{' . ListClassElem '}'    (rule 6)

	'bool'         reduce using rule 19
	'int'          reduce using rule 19
	'void'         reduce using rule 19
	'}'            reduce using rule 19
	'constr'       reduce using rule 19
	L_CIdent       reduce using rule 19

	ListClassElem  goto state 25

State 23

	TopDef -> 'class' CIdent 'extends' . CIdent '{' ListClassElem '}'    (rule 7)

	L_CIdent       shift, and enter state 12

	CIdent         goto state 24

State 24

	TopDef -> 'class' CIdent 'extends' CIdent . '{' ListClassElem '}'    (rule 7)

	'{'            shift, and enter state 39


State 25

	TopDef -> 'class' CIdent '{' ListClassElem . '}'    (rule 6)
	ListClassElem -> ListClassElem . ClassElem          (rule 20)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	'}'            shift, and enter state 37
	'constr'       shift, and enter state 38
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	ClassElem      goto state 35
	Type           goto state 36

State 26

	ListArgument -> Argument .                          (rule 12)
	ListArgument -> Argument . ',' ListArgument         (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 34
	'->'           reduce using rule 12


State 27

	TopDef -> Type VIdent '(' ListArgument . ')' Block    (rule 5)

	')'            shift, and enter state 33


State 28

	Argument -> Type . VIdent                           (rule 10)
	Type -> Type . '[]'                                 (rule 49)
	Type -> Type . '(' ListType ')'                     (rule 50)

	'('            shift, and enter state 15
	'[]'           shift, and enter state 16
	L_VIdent       shift, and enter state 17

	VIdent         goto state 32

State 29

	Type -> Type '(' ListType ')' .                     (rule 50)

	'('            reduce using rule 50
	')'            reduce using rule 50
	','            reduce using rule 50
	'['            reduce using rule 50
	'[]'           reduce using rule 50
	L_VIdent       reduce using rule 50


State 30

	ListType -> Type ',' . ListType                     (rule 53)

	')'            reduce using rule 51
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Type           goto state 19
	ListType       goto state 31

State 31

	ListType -> Type ',' ListType .                     (rule 53)

	')'            reduce using rule 53


State 32

	Argument -> Type VIdent .                           (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10
	'->'           reduce using rule 10


State 33

	TopDef -> Type VIdent '(' ListArgument ')' . Block    (rule 5)

	'{'            shift, and enter state 46

	Block          goto state 45

State 34

	ListArgument -> Argument ',' . ListArgument         (rule 13)

	')'            reduce using rule 11
	'->'           reduce using rule 11
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Argument       goto state 26
	ListArgument   goto state 44
	Type           goto state 28

State 35

	ListClassElem -> ListClassElem ClassElem .          (rule 20)

	'bool'         reduce using rule 20
	'int'          reduce using rule 20
	'void'         reduce using rule 20
	'}'            reduce using rule 20
	'constr'       reduce using rule 20
	L_CIdent       reduce using rule 20


State 36

	ClassElem -> Type . ListVIdent ';'                  (rule 14)
	ClassElem -> Type . VIdent '(' ListArgument ')' Block    (rule 16)
	Type -> Type . '[]'                                 (rule 49)
	Type -> Type . '(' ListType ')'                     (rule 50)

	'('            shift, and enter state 15
	'[]'           shift, and enter state 16
	L_VIdent       shift, and enter state 17

	VIdent         goto state 42
	ListVIdent     goto state 43

State 37

	TopDef -> 'class' CIdent '{' ListClassElem '}' .    (rule 6)

	'bool'         reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'void'         reduce using rule 6
	L_CIdent       reduce using rule 6
	%eof           reduce using rule 6


State 38

	ClassElem -> 'constr' . '(' ListArgument ')' Block    (rule 15)

	'('            shift, and enter state 41


State 39

	TopDef -> 'class' CIdent 'extends' CIdent '{' . ListClassElem '}'    (rule 7)

	'bool'         reduce using rule 19
	'int'          reduce using rule 19
	'void'         reduce using rule 19
	'}'            reduce using rule 19
	'constr'       reduce using rule 19
	L_CIdent       reduce using rule 19

	ListClassElem  goto state 40

State 40

	TopDef -> 'class' CIdent 'extends' CIdent '{' ListClassElem . '}'    (rule 7)
	ListClassElem -> ListClassElem . ClassElem          (rule 20)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	'}'            shift, and enter state 52
	'constr'       shift, and enter state 38
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	ClassElem      goto state 35
	Type           goto state 36

State 41

	ClassElem -> 'constr' '(' . ListArgument ')' Block    (rule 15)

	')'            reduce using rule 11
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Argument       goto state 26
	ListArgument   goto state 51
	Type           goto state 28

State 42

	ClassElem -> Type VIdent . '(' ListArgument ')' Block    (rule 16)
	ListVIdent -> VIdent .                              (rule 17)
	ListVIdent -> VIdent . ',' ListVIdent               (rule 18)

	'('            shift, and enter state 49
	','            shift, and enter state 50
	';'            reduce using rule 17


State 43

	ClassElem -> Type ListVIdent . ';'                  (rule 14)

	';'            shift, and enter state 48


State 44

	ListArgument -> Argument ',' ListArgument .         (rule 13)

	')'            reduce using rule 13
	'->'           reduce using rule 13


State 45

	TopDef -> Type VIdent '(' ListArgument ')' Block .    (rule 5)

	'bool'         reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'void'         reduce using rule 5
	L_CIdent       reduce using rule 5
	%eof           reduce using rule 5


State 46

	Block -> '{' . ListStmt '}'                         (rule 21)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'\\'           reduce using rule 22
	'bool'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'null'         reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'~'            reduce using rule 22
	'for'          reduce using rule 22
	L_integ        reduce using rule 22
	L_CIdent       reduce using rule 22
	L_VIdent       reduce using rule 22

	ListStmt       goto state 47

State 47

	Block -> '{' ListStmt . '}'                         (rule 21)
	ListStmt -> ListStmt . Stmt                         (rule 23)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'}'            shift, and enter state 82
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 60
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 48

	ClassElem -> Type ListVIdent ';' .                  (rule 14)

	'bool'         reduce using rule 14
	'int'          reduce using rule 14
	'void'         reduce using rule 14
	'}'            reduce using rule 14
	'constr'       reduce using rule 14
	L_CIdent       reduce using rule 14


State 49

	ClassElem -> Type VIdent '(' . ListArgument ')' Block    (rule 16)

	')'            reduce using rule 11
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Argument       goto state 26
	ListArgument   goto state 56
	Type           goto state 28

State 50

	ListVIdent -> VIdent ',' . ListVIdent               (rule 18)

	L_VIdent       shift, and enter state 17

	VIdent         goto state 54
	ListVIdent     goto state 55

State 51

	ClassElem -> 'constr' '(' ListArgument . ')' Block    (rule 15)

	')'            shift, and enter state 53


State 52

	TopDef -> 'class' CIdent 'extends' CIdent '{' ListClassElem '}' .    (rule 7)

	'bool'         reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'void'         reduce using rule 7
	L_CIdent       reduce using rule 7
	%eof           reduce using rule 7


State 53

	ClassElem -> 'constr' '(' ListArgument ')' . Block    (rule 15)

	'{'            shift, and enter state 46

	Block          goto state 127

State 54

	ListVIdent -> VIdent .                              (rule 17)
	ListVIdent -> VIdent . ',' ListVIdent               (rule 18)

	','            shift, and enter state 50
	';'            reduce using rule 17


State 55

	ListVIdent -> VIdent ',' ListVIdent .               (rule 18)

	';'            reduce using rule 18


State 56

	ClassElem -> Type VIdent '(' ListArgument . ')' Block    (rule 16)

	')'            shift, and enter state 126


State 57

	Expr6 -> Integer .                                  (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<<'           reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'>>'           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'|'            reduce using rule 55
	'||'           reduce using rule 55
	'to'           reduce using rule 55
	'down'         reduce using rule 55
	'by'           reduce using rule 55


State 58

	Expr6 -> VIdent .                                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<<'           reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'>>'           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'^'            reduce using rule 58
	'|'            reduce using rule 58
	'||'           reduce using rule 58
	'to'           reduce using rule 58
	'down'         reduce using rule 58
	'by'           reduce using rule 58


State 59

	Stmt -> Block .                                     (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'++'           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'--'           reduce using rule 25
	';'            reduce using rule 25
	'='            reduce using rule 25
	'\\'           reduce using rule 25
	']'            reduce using rule 25
	'bool'         reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'null'         reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'~'            reduce using rule 25
	'for'          reduce using rule 25
	'to'           reduce using rule 25
	'down'         reduce using rule 25
	'by'           reduce using rule 25
	L_integ        reduce using rule 25
	L_CIdent       reduce using rule 25
	L_VIdent       reduce using rule 25


State 60

	ListStmt -> ListStmt Stmt .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'\\'           reduce using rule 23
	'bool'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'null'         reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'~'            reduce using rule 23
	'for'          reduce using rule 23
	L_integ        reduce using rule 23
	L_CIdent       reduce using rule 23
	L_VIdent       reduce using rule 23


State 61

	Stmt -> Type . ListItem ';'                         (rule 26)
	Type -> Type . '[]'                                 (rule 49)
	Type -> Type . '(' ListType ')'                     (rule 50)

	'('            shift, and enter state 15
	'[]'           shift, and enter state 16
	L_VIdent       shift, and enter state 17

	VIdent         goto state 123
	Item           goto state 124
	ListItem       goto state 125

State 62

	Expr6 -> Expr6 . '.' VIdent                         (rule 59)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 60)
	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 61)
	Expr5 -> Expr6 .                                    (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&'            reduce using rule 64
	'&&'           reduce using rule 64
	'('            shift, and enter state 120
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'--'           reduce using rule 64
	'.'            shift, and enter state 121
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<<'           reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'>>'           reduce using rule 64
	'['            shift, and enter state 122
	']'            reduce using rule 64
	'^'            reduce using rule 64
	'|'            reduce using rule 64
	'||'           reduce using rule 64
	'to'           reduce using rule 64
	'down'         reduce using rule 64
	'by'           reduce using rule 64


State 63

	Expr4 -> Expr5 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	'++'           reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'--'           reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<<'           reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'>>'           reduce using rule 66
	']'            reduce using rule 66
	'^'            reduce using rule 66
	'|'            reduce using rule 66
	'||'           reduce using rule 66
	'to'           reduce using rule 66
	'down'         reduce using rule 66
	'by'           reduce using rule 66


State 64

	Expr4 -> Expr4 . MulOp Expr5                        (rule 65)
	Expr3 -> Expr4 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            shift, and enter state 112
	'&'            shift, and enter state 113
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 114
	'+'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'--'           reduce using rule 68
	'/'            shift, and enter state 115
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<<'           shift, and enter state 116
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'>>'           shift, and enter state 117
	']'            reduce using rule 68
	'^'            shift, and enter state 118
	'|'            shift, and enter state 119
	'||'           reduce using rule 68
	'to'           reduce using rule 68
	'down'         reduce using rule 68
	'by'           reduce using rule 68

	MulOp          goto state 111

State 65

	Expr3 -> Expr3 . AddOp Expr4                        (rule 67)
	Expr2 -> Expr3 .                                    (rule 70)

	'!='           reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'+'            shift, and enter state 109
	'++'           reduce using rule 70
	','            reduce using rule 70
	'-'            shift, and enter state 110
	'--'           reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70
	'to'           reduce using rule 70
	'down'         reduce using rule 70
	'by'           reduce using rule 70

	AddOp          goto state 108

State 66

	Expr2 -> Expr2 . RelOp Expr3                        (rule 69)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 71)
	Expr1 -> Expr2 .                                    (rule 72)

	'!='           shift, and enter state 101
	'&&'           shift, and enter state 102
	')'            reduce using rule 72
	'++'           reduce using rule 72
	','            reduce using rule 72
	'--'           reduce using rule 72
	';'            reduce using rule 72
	'<'            shift, and enter state 103
	'<='           shift, and enter state 104
	'='            reduce using rule 72
	'=='           shift, and enter state 105
	'>'            shift, and enter state 106
	'>='           shift, and enter state 107
	']'            reduce using rule 72
	'||'           reduce using rule 72
	'to'           reduce using rule 72
	'down'         reduce using rule 72
	'by'           reduce using rule 72

	RelOp          goto state 100

State 67

	Expr -> Expr1 . '||' Expr                           (rule 73)
	Expr -> Expr1 .                                     (rule 77)

	')'            reduce using rule 77
	'++'           reduce using rule 77
	','            reduce using rule 77
	'--'           reduce using rule 77
	';'            reduce using rule 77
	'='            reduce using rule 77
	']'            reduce using rule 77
	'||'           shift, and enter state 99
	'to'           reduce using rule 77
	'down'         reduce using rule 77
	'by'           reduce using rule 77


State 68

	Stmt -> Expr . '=' Expr ';'                         (rule 27)
	Stmt -> Expr . '++' ';'                             (rule 28)
	Stmt -> Expr . '--' ';'                             (rule 29)
	Stmt -> Expr . ';'                                  (rule 40)

	'++'           shift, and enter state 95
	'--'           shift, and enter state 96
	';'            shift, and enter state 97
	'='            shift, and enter state 98


State 69

	Expr5 -> UnaryOp . Expr5                            (rule 63)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'false'        shift, and enter state 75
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 94
	UnaryOp        goto state 69

State 70

	UnaryOp -> '!' .                                    (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'null'         reduce using rule 82
	'true'         reduce using rule 82
	'~'            reduce using rule 82
	L_integ        reduce using rule 82
	L_VIdent       reduce using rule 82


State 71

	Expr6 -> '(' . Expr ')'                             (rule 62)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 93
	UnaryOp        goto state 69

State 72

	UnaryOp -> '-' .                                    (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'null'         reduce using rule 81
	'true'         reduce using rule 81
	'~'            reduce using rule 81
	L_integ        reduce using rule 81
	L_VIdent       reduce using rule 81


State 73

	Stmt -> ';' .                                       (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'++'           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'--'           reduce using rule 24
	';'            reduce using rule 24
	'='            reduce using rule 24
	'\\'           reduce using rule 24
	']'            reduce using rule 24
	'bool'         reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'null'         reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'~'            reduce using rule 24
	'for'          reduce using rule 24
	'to'           reduce using rule 24
	'down'         reduce using rule 24
	'by'           reduce using rule 24
	L_integ        reduce using rule 24
	L_CIdent       reduce using rule 24
	L_VIdent       reduce using rule 24


State 74

	Expr -> '\\' . ListArgument '->' Stmt               (rule 76)

	'->'           reduce using rule 11
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 3
	Argument       goto state 26
	ListArgument   goto state 92
	Type           goto state 28

State 75

	Expr6 -> 'false' .                                  (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<<'           reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'>>'           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'^'            reduce using rule 57
	'|'            reduce using rule 57
	'||'           reduce using rule 57
	'to'           reduce using rule 57
	'down'         reduce using rule 57
	'by'           reduce using rule 57


State 76

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 32)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 33)

	'('            shift, and enter state 91


State 77

	Expr -> 'new' . CIdent '(' ListExpr ')'             (rule 74)
	Expr -> 'new' . Type '[' Expr ']'                   (rule 75)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 10
	'void'         shift, and enter state 11
	L_CIdent       shift, and enter state 12

	CIdent         goto state 89
	Type           goto state 90

State 78

	Expr6 -> 'null' .                                   (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<<'           reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'>>'           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'|'            reduce using rule 54
	'||'           reduce using rule 54
	'to'           reduce using rule 54
	'down'         reduce using rule 54
	'by'           reduce using rule 54


State 79

	Stmt -> 'return' . Expr ';'                         (rule 30)
	Stmt -> 'return' . ';'                              (rule 31)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 88
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 87
	UnaryOp        goto state 69

State 80

	Expr6 -> 'true' .                                   (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<<'           reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'>>'           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'^'            reduce using rule 56
	'|'            reduce using rule 56
	'||'           reduce using rule 56
	'to'           reduce using rule 56
	'down'         reduce using rule 56
	'by'           reduce using rule 56


State 81

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 34)

	'('            shift, and enter state 86


State 82

	Block -> '{' ListStmt '}' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'++'           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'--'           reduce using rule 21
	';'            reduce using rule 21
	'='            reduce using rule 21
	'\\'           reduce using rule 21
	']'            reduce using rule 21
	'bool'         reduce using rule 21
	'class'        reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'null'         reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'~'            reduce using rule 21
	'for'          reduce using rule 21
	'to'           reduce using rule 21
	'down'         reduce using rule 21
	'by'           reduce using rule 21
	'constr'       reduce using rule 21
	L_integ        reduce using rule 21
	L_CIdent       reduce using rule 21
	L_VIdent       reduce using rule 21
	%eof           reduce using rule 21


State 83

	UnaryOp -> '~' .                                    (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'null'         reduce using rule 83
	'true'         reduce using rule 83
	'~'            reduce using rule 83
	L_integ        reduce using rule 83
	L_VIdent       reduce using rule 83


State 84

	Stmt -> 'for' . '(' VIdent '=' Expr 'to' Expr ')' Stmt    (rule 35)
	Stmt -> 'for' . '(' VIdent '=' Expr 'to' Expr 'by' Expr ')' Stmt    (rule 36)
	Stmt -> 'for' . '(' VIdent '=' Expr 'down' 'to' Expr ')' Stmt    (rule 37)
	Stmt -> 'for' . '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 38)
	Stmt -> 'for' . '(' VIdent 'in' Expr ')' Stmt       (rule 39)

	'('            shift, and enter state 85


State 85

	Stmt -> 'for' '(' . VIdent '=' Expr 'to' Expr ')' Stmt    (rule 35)
	Stmt -> 'for' '(' . VIdent '=' Expr 'to' Expr 'by' Expr ')' Stmt    (rule 36)
	Stmt -> 'for' '(' . VIdent '=' Expr 'down' 'to' Expr ')' Stmt    (rule 37)
	Stmt -> 'for' '(' . VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 38)
	Stmt -> 'for' '(' . VIdent 'in' Expr ')' Stmt       (rule 39)

	L_VIdent       shift, and enter state 17

	VIdent         goto state 151

State 86

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 34)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 150
	UnaryOp        goto state 69

State 87

	Stmt -> 'return' Expr . ';'                         (rule 30)

	';'            shift, and enter state 149


State 88

	Stmt -> 'return' ';' .                              (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'++'           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'--'           reduce using rule 31
	';'            reduce using rule 31
	'='            reduce using rule 31
	'\\'           reduce using rule 31
	']'            reduce using rule 31
	'bool'         reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'null'         reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'~'            reduce using rule 31
	'for'          reduce using rule 31
	'to'           reduce using rule 31
	'down'         reduce using rule 31
	'by'           reduce using rule 31
	L_integ        reduce using rule 31
	L_CIdent       reduce using rule 31
	L_VIdent       reduce using rule 31


State 89

	Type -> CIdent .                                    (rule 48)
	Expr -> 'new' CIdent . '(' ListExpr ')'             (rule 74)

	'('            shift, and enter state 148
			(reduce using rule 48)

	'['            reduce using rule 48
	'[]'           reduce using rule 48


State 90

	Type -> Type . '[]'                                 (rule 49)
	Type -> Type . '(' ListType ')'                     (rule 50)
	Expr -> 'new' Type . '[' Expr ']'                   (rule 75)

	'('            shift, and enter state 15
	'['            shift, and enter state 147
	'[]'           shift, and enter state 16


State 91

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 32)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 33)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 146
	UnaryOp        goto state 69

State 92

	Expr -> '\\' ListArgument . '->' Stmt               (rule 76)

	'->'           shift, and enter state 145


State 93

	Expr6 -> '(' Expr . ')'                             (rule 62)

	')'            shift, and enter state 144


State 94

	Expr5 -> UnaryOp Expr5 .                            (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<<'           reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'>>'           reduce using rule 63
	']'            reduce using rule 63
	'^'            reduce using rule 63
	'|'            reduce using rule 63
	'||'           reduce using rule 63
	'to'           reduce using rule 63
	'down'         reduce using rule 63
	'by'           reduce using rule 63


State 95

	Stmt -> Expr '++' . ';'                             (rule 28)

	';'            shift, and enter state 143


State 96

	Stmt -> Expr '--' . ';'                             (rule 29)

	';'            shift, and enter state 142


State 97

	Stmt -> Expr ';' .                                  (rule 40)

	'!'            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'++'           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'--'           reduce using rule 40
	';'            reduce using rule 40
	'='            reduce using rule 40
	'\\'           reduce using rule 40
	']'            reduce using rule 40
	'bool'         reduce using rule 40
	'else'         reduce using rule 40
	'false'        reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'new'          reduce using rule 40
	'null'         reduce using rule 40
	'return'       reduce using rule 40
	'true'         reduce using rule 40
	'void'         reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	'~'            reduce using rule 40
	'for'          reduce using rule 40
	'to'           reduce using rule 40
	'down'         reduce using rule 40
	'by'           reduce using rule 40
	L_integ        reduce using rule 40
	L_CIdent       reduce using rule 40
	L_VIdent       reduce using rule 40


State 98

	Stmt -> Expr '=' . Expr ';'                         (rule 27)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 141
	UnaryOp        goto state 69

State 99

	Expr -> Expr1 '||' . Expr                           (rule 73)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 140
	UnaryOp        goto state 69

State 100

	Expr2 -> Expr2 RelOp . Expr3                        (rule 69)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'false'        shift, and enter state 75
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 139
	UnaryOp        goto state 69

State 101

	RelOp -> '!=' .                                     (rule 99)

	'!'            reduce using rule 99
	'('            reduce using rule 99
	'-'            reduce using rule 99
	'false'        reduce using rule 99
	'null'         reduce using rule 99
	'true'         reduce using rule 99
	'~'            reduce using rule 99
	L_integ        reduce using rule 99
	L_VIdent       reduce using rule 99


State 102

	Expr1 -> Expr2 '&&' . Expr1                         (rule 71)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'false'        shift, and enter state 75
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 138
	UnaryOp        goto state 69

State 103

	RelOp -> '<' .                                      (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'-'            reduce using rule 94
	'false'        reduce using rule 94
	'null'         reduce using rule 94
	'true'         reduce using rule 94
	'~'            reduce using rule 94
	L_integ        reduce using rule 94
	L_VIdent       reduce using rule 94


State 104

	RelOp -> '<=' .                                     (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'-'            reduce using rule 95
	'false'        reduce using rule 95
	'null'         reduce using rule 95
	'true'         reduce using rule 95
	'~'            reduce using rule 95
	L_integ        reduce using rule 95
	L_VIdent       reduce using rule 95


State 105

	RelOp -> '==' .                                     (rule 98)

	'!'            reduce using rule 98
	'('            reduce using rule 98
	'-'            reduce using rule 98
	'false'        reduce using rule 98
	'null'         reduce using rule 98
	'true'         reduce using rule 98
	'~'            reduce using rule 98
	L_integ        reduce using rule 98
	L_VIdent       reduce using rule 98


State 106

	RelOp -> '>' .                                      (rule 96)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'-'            reduce using rule 96
	'false'        reduce using rule 96
	'null'         reduce using rule 96
	'true'         reduce using rule 96
	'~'            reduce using rule 96
	L_integ        reduce using rule 96
	L_VIdent       reduce using rule 96


State 107

	RelOp -> '>=' .                                     (rule 97)

	'!'            reduce using rule 97
	'('            reduce using rule 97
	'-'            reduce using rule 97
	'false'        reduce using rule 97
	'null'         reduce using rule 97
	'true'         reduce using rule 97
	'~'            reduce using rule 97
	L_integ        reduce using rule 97
	L_VIdent       reduce using rule 97


State 108

	Expr3 -> Expr3 AddOp . Expr4                        (rule 67)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'false'        shift, and enter state 75
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 137
	UnaryOp        goto state 69

State 109

	AddOp -> '+' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'null'         reduce using rule 84
	'true'         reduce using rule 84
	'~'            reduce using rule 84
	L_integ        reduce using rule 84
	L_VIdent       reduce using rule 84


State 110

	AddOp -> '-' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'null'         reduce using rule 85
	'true'         reduce using rule 85
	'~'            reduce using rule 85
	L_integ        reduce using rule 85
	L_VIdent       reduce using rule 85


State 111

	Expr4 -> Expr4 MulOp . Expr5                        (rule 65)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'false'        shift, and enter state 75
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 136
	UnaryOp        goto state 69

State 112

	MulOp -> '%' .                                      (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'null'         reduce using rule 88
	'true'         reduce using rule 88
	'~'            reduce using rule 88
	L_integ        reduce using rule 88
	L_VIdent       reduce using rule 88


State 113

	MulOp -> '&' .                                      (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'false'        reduce using rule 91
	'null'         reduce using rule 91
	'true'         reduce using rule 91
	'~'            reduce using rule 91
	L_integ        reduce using rule 91
	L_VIdent       reduce using rule 91


State 114

	MulOp -> '*' .                                      (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'null'         reduce using rule 86
	'true'         reduce using rule 86
	'~'            reduce using rule 86
	L_integ        reduce using rule 86
	L_VIdent       reduce using rule 86


State 115

	MulOp -> '/' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'null'         reduce using rule 87
	'true'         reduce using rule 87
	'~'            reduce using rule 87
	L_integ        reduce using rule 87
	L_VIdent       reduce using rule 87


State 116

	MulOp -> '<<' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'null'         reduce using rule 89
	'true'         reduce using rule 89
	'~'            reduce using rule 89
	L_integ        reduce using rule 89
	L_VIdent       reduce using rule 89


State 117

	MulOp -> '>>' .                                     (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'null'         reduce using rule 90
	'true'         reduce using rule 90
	'~'            reduce using rule 90
	L_integ        reduce using rule 90
	L_VIdent       reduce using rule 90


State 118

	MulOp -> '^' .                                      (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'-'            reduce using rule 93
	'false'        reduce using rule 93
	'null'         reduce using rule 93
	'true'         reduce using rule 93
	'~'            reduce using rule 93
	L_integ        reduce using rule 93
	L_VIdent       reduce using rule 93


State 119

	MulOp -> '|' .                                      (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'-'            reduce using rule 92
	'false'        reduce using rule 92
	'null'         reduce using rule 92
	'true'         reduce using rule 92
	'~'            reduce using rule 92
	L_integ        reduce using rule 92
	L_VIdent       reduce using rule 92


State 120

	Expr6 -> Expr6 '(' . ListExpr ')'                   (rule 61)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	')'            reduce using rule 78
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 134
	ListExpr       goto state 135
	UnaryOp        goto state 69

State 121

	Expr6 -> Expr6 '.' . VIdent                         (rule 59)

	L_VIdent       shift, and enter state 17

	VIdent         goto state 133

State 122

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 60)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 132
	UnaryOp        goto state 69

State 123

	Item -> VIdent .                                    (rule 41)
	Item -> VIdent . '=' Expr                           (rule 42)

	','            reduce using rule 41
	';'            reduce using rule 41
	'='            shift, and enter state 131


State 124

	ListItem -> Item .                                  (rule 43)
	ListItem -> Item . ',' ListItem                     (rule 44)

	','            shift, and enter state 130
	';'            reduce using rule 43


State 125

	Stmt -> Type ListItem . ';'                         (rule 26)

	';'            shift, and enter state 129


State 126

	ClassElem -> Type VIdent '(' ListArgument ')' . Block    (rule 16)

	'{'            shift, and enter state 46

	Block          goto state 128

State 127

	ClassElem -> 'constr' '(' ListArgument ')' Block .    (rule 15)

	'bool'         reduce using rule 15
	'int'          reduce using rule 15
	'void'         reduce using rule 15
	'}'            reduce using rule 15
	'constr'       reduce using rule 15
	L_CIdent       reduce using rule 15


State 128

	ClassElem -> Type VIdent '(' ListArgument ')' Block .    (rule 16)

	'bool'         reduce using rule 16
	'int'          reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	'constr'       reduce using rule 16
	L_CIdent       reduce using rule 16


State 129

	Stmt -> Type ListItem ';' .                         (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'++'           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'--'           reduce using rule 26
	';'            reduce using rule 26
	'='            reduce using rule 26
	'\\'           reduce using rule 26
	']'            reduce using rule 26
	'bool'         reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'null'         reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'~'            reduce using rule 26
	'for'          reduce using rule 26
	'to'           reduce using rule 26
	'down'         reduce using rule 26
	'by'           reduce using rule 26
	L_integ        reduce using rule 26
	L_CIdent       reduce using rule 26
	L_VIdent       reduce using rule 26


State 130

	ListItem -> Item ',' . ListItem                     (rule 44)

	L_VIdent       shift, and enter state 17

	VIdent         goto state 123
	Item           goto state 124
	ListItem       goto state 164

State 131

	Item -> VIdent '=' . Expr                           (rule 42)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 163
	UnaryOp        goto state 69

State 132

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 60)

	']'            shift, and enter state 162


State 133

	Expr6 -> Expr6 '.' VIdent .                         (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<<'           reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'>>'           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'^'            reduce using rule 59
	'|'            reduce using rule 59
	'||'           reduce using rule 59
	'to'           reduce using rule 59
	'down'         reduce using rule 59
	'by'           reduce using rule 59


State 134

	ListExpr -> Expr .                                  (rule 79)
	ListExpr -> Expr . ',' ListExpr                     (rule 80)

	')'            reduce using rule 79
	','            shift, and enter state 161


State 135

	Expr6 -> Expr6 '(' ListExpr . ')'                   (rule 61)

	')'            shift, and enter state 160


State 136

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	'++'           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'--'           reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<<'           reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'>>'           reduce using rule 65
	']'            reduce using rule 65
	'^'            reduce using rule 65
	'|'            reduce using rule 65
	'||'           reduce using rule 65
	'to'           reduce using rule 65
	'down'         reduce using rule 65
	'by'           reduce using rule 65


State 137

	Expr4 -> Expr4 . MulOp Expr5                        (rule 65)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 67)

	'!='           reduce using rule 67
	'%'            shift, and enter state 112
	'&'            shift, and enter state 113
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            shift, and enter state 114
	'+'            reduce using rule 67
	'++'           reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'--'           reduce using rule 67
	'/'            shift, and enter state 115
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<<'           shift, and enter state 116
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'>>'           shift, and enter state 117
	']'            reduce using rule 67
	'^'            shift, and enter state 118
	'|'            shift, and enter state 119
	'||'           reduce using rule 67
	'to'           reduce using rule 67
	'down'         reduce using rule 67
	'by'           reduce using rule 67

	MulOp          goto state 111

State 138

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 71)

	')'            reduce using rule 71
	'++'           reduce using rule 71
	','            reduce using rule 71
	'--'           reduce using rule 71
	';'            reduce using rule 71
	'='            reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71
	'to'           reduce using rule 71
	'down'         reduce using rule 71
	'by'           reduce using rule 71


State 139

	Expr3 -> Expr3 . AddOp Expr4                        (rule 67)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 69)

	'!='           reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'+'            shift, and enter state 109
	'++'           reduce using rule 69
	','            reduce using rule 69
	'-'            shift, and enter state 110
	'--'           reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69
	'to'           reduce using rule 69
	'down'         reduce using rule 69
	'by'           reduce using rule 69

	AddOp          goto state 108

State 140

	Expr -> Expr1 '||' Expr .                           (rule 73)

	')'            reduce using rule 73
	'++'           reduce using rule 73
	','            reduce using rule 73
	'--'           reduce using rule 73
	';'            reduce using rule 73
	'='            reduce using rule 73
	']'            reduce using rule 73
	'to'           reduce using rule 73
	'down'         reduce using rule 73
	'by'           reduce using rule 73


State 141

	Stmt -> Expr '=' Expr . ';'                         (rule 27)

	';'            shift, and enter state 159


State 142

	Stmt -> Expr '--' ';' .                             (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'++'           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'--'           reduce using rule 29
	';'            reduce using rule 29
	'='            reduce using rule 29
	'\\'           reduce using rule 29
	']'            reduce using rule 29
	'bool'         reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'null'         reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'~'            reduce using rule 29
	'for'          reduce using rule 29
	'to'           reduce using rule 29
	'down'         reduce using rule 29
	'by'           reduce using rule 29
	L_integ        reduce using rule 29
	L_CIdent       reduce using rule 29
	L_VIdent       reduce using rule 29


State 143

	Stmt -> Expr '++' ';' .                             (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'++'           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'--'           reduce using rule 28
	';'            reduce using rule 28
	'='            reduce using rule 28
	'\\'           reduce using rule 28
	']'            reduce using rule 28
	'bool'         reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'null'         reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'~'            reduce using rule 28
	'for'          reduce using rule 28
	'to'           reduce using rule 28
	'down'         reduce using rule 28
	'by'           reduce using rule 28
	L_integ        reduce using rule 28
	L_CIdent       reduce using rule 28
	L_VIdent       reduce using rule 28


State 144

	Expr6 -> '(' Expr ')' .                             (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'.'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<<'           reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'>>'           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'^'            reduce using rule 62
	'|'            reduce using rule 62
	'||'           reduce using rule 62
	'to'           reduce using rule 62
	'down'         reduce using rule 62
	'by'           reduce using rule 62


State 145

	Expr -> '\\' ListArgument '->' . Stmt               (rule 76)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 158
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 146

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 32)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 33)

	')'            shift, and enter state 157


State 147

	Expr -> 'new' Type '[' . Expr ']'                   (rule 75)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 156
	UnaryOp        goto state 69

State 148

	Expr -> 'new' CIdent '(' . ListExpr ')'             (rule 74)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	')'            reduce using rule 78
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 134
	ListExpr       goto state 155
	UnaryOp        goto state 69

State 149

	Stmt -> 'return' Expr ';' .                         (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'++'           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'--'           reduce using rule 30
	';'            reduce using rule 30
	'='            reduce using rule 30
	'\\'           reduce using rule 30
	']'            reduce using rule 30
	'bool'         reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'null'         reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'~'            reduce using rule 30
	'for'          reduce using rule 30
	'to'           reduce using rule 30
	'down'         reduce using rule 30
	'by'           reduce using rule 30
	L_integ        reduce using rule 30
	L_CIdent       reduce using rule 30
	L_VIdent       reduce using rule 30


State 150

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 34)

	')'            shift, and enter state 154


State 151

	Stmt -> 'for' '(' VIdent . '=' Expr 'to' Expr ')' Stmt    (rule 35)
	Stmt -> 'for' '(' VIdent . '=' Expr 'to' Expr 'by' Expr ')' Stmt    (rule 36)
	Stmt -> 'for' '(' VIdent . '=' Expr 'down' 'to' Expr ')' Stmt    (rule 37)
	Stmt -> 'for' '(' VIdent . '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 38)
	Stmt -> 'for' '(' VIdent . 'in' Expr ')' Stmt       (rule 39)

	'='            shift, and enter state 152
	'in'           shift, and enter state 153


State 152

	Stmt -> 'for' '(' VIdent '=' . Expr 'to' Expr ')' Stmt    (rule 35)
	Stmt -> 'for' '(' VIdent '=' . Expr 'to' Expr 'by' Expr ')' Stmt    (rule 36)
	Stmt -> 'for' '(' VIdent '=' . Expr 'down' 'to' Expr ')' Stmt    (rule 37)
	Stmt -> 'for' '(' VIdent '=' . Expr 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 38)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 171
	UnaryOp        goto state 69

State 153

	Stmt -> 'for' '(' VIdent 'in' . Expr ')' Stmt       (rule 39)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 170
	UnaryOp        goto state 69

State 154

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 34)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 169
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 155

	Expr -> 'new' CIdent '(' ListExpr . ')'             (rule 74)

	')'            shift, and enter state 168


State 156

	Expr -> 'new' Type '[' Expr . ']'                   (rule 75)

	']'            shift, and enter state 167


State 157

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 32)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 33)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 166
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 158

	Expr -> '\\' ListArgument '->' Stmt .               (rule 76)

	')'            reduce using rule 76
	'++'           reduce using rule 76
	','            reduce using rule 76
	'--'           reduce using rule 76
	';'            reduce using rule 76
	'='            reduce using rule 76
	']'            reduce using rule 76
	'to'           reduce using rule 76
	'down'         reduce using rule 76
	'by'           reduce using rule 76


State 159

	Stmt -> Expr '=' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'++'           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'--'           reduce using rule 27
	';'            reduce using rule 27
	'='            reduce using rule 27
	'\\'           reduce using rule 27
	']'            reduce using rule 27
	'bool'         reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'null'         reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'~'            reduce using rule 27
	'for'          reduce using rule 27
	'to'           reduce using rule 27
	'down'         reduce using rule 27
	'by'           reduce using rule 27
	L_integ        reduce using rule 27
	L_CIdent       reduce using rule 27
	L_VIdent       reduce using rule 27


State 160

	Expr6 -> Expr6 '(' ListExpr ')' .                   (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'.'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<<'           reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'>>'           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'^'            reduce using rule 61
	'|'            reduce using rule 61
	'||'           reduce using rule 61
	'to'           reduce using rule 61
	'down'         reduce using rule 61
	'by'           reduce using rule 61


State 161

	ListExpr -> Expr ',' . ListExpr                     (rule 80)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	')'            reduce using rule 78
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 134
	ListExpr       goto state 165
	UnaryOp        goto state 69

State 162

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<<'           reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'>>'           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'^'            reduce using rule 60
	'|'            reduce using rule 60
	'||'           reduce using rule 60
	'to'           reduce using rule 60
	'down'         reduce using rule 60
	'by'           reduce using rule 60


State 163

	Item -> VIdent '=' Expr .                           (rule 42)

	','            reduce using rule 42
	';'            reduce using rule 42


State 164

	ListItem -> Item ',' ListItem .                     (rule 44)

	';'            reduce using rule 44


State 165

	ListExpr -> Expr ',' ListExpr .                     (rule 80)

	')'            reduce using rule 80


State 166

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 32)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 33)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'++'           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'--'           reduce using rule 32
	';'            reduce using rule 32
	'='            reduce using rule 32
	'\\'           reduce using rule 32
	']'            reduce using rule 32
	'bool'         reduce using rule 32
	'else'         shift, and enter state 175
			(reduce using rule 32)

	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'null'         reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'~'            reduce using rule 32
	'for'          reduce using rule 32
	'to'           reduce using rule 32
	'down'         reduce using rule 32
	'by'           reduce using rule 32
	L_integ        reduce using rule 32
	L_CIdent       reduce using rule 32
	L_VIdent       reduce using rule 32


State 167

	Expr -> 'new' Type '[' Expr ']' .                   (rule 75)

	')'            reduce using rule 75
	'++'           reduce using rule 75
	','            reduce using rule 75
	'--'           reduce using rule 75
	';'            reduce using rule 75
	'='            reduce using rule 75
	']'            reduce using rule 75
	'to'           reduce using rule 75
	'down'         reduce using rule 75
	'by'           reduce using rule 75


State 168

	Expr -> 'new' CIdent '(' ListExpr ')' .             (rule 74)

	')'            reduce using rule 74
	'++'           reduce using rule 74
	','            reduce using rule 74
	'--'           reduce using rule 74
	';'            reduce using rule 74
	'='            reduce using rule 74
	']'            reduce using rule 74
	'to'           reduce using rule 74
	'down'         reduce using rule 74
	'by'           reduce using rule 74


State 169

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'++'           reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'--'           reduce using rule 34
	';'            reduce using rule 34
	'='            reduce using rule 34
	'\\'           reduce using rule 34
	']'            reduce using rule 34
	'bool'         reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'null'         reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	'~'            reduce using rule 34
	'for'          reduce using rule 34
	'to'           reduce using rule 34
	'down'         reduce using rule 34
	'by'           reduce using rule 34
	L_integ        reduce using rule 34
	L_CIdent       reduce using rule 34
	L_VIdent       reduce using rule 34


State 170

	Stmt -> 'for' '(' VIdent 'in' Expr . ')' Stmt       (rule 39)

	')'            shift, and enter state 174


State 171

	Stmt -> 'for' '(' VIdent '=' Expr . 'to' Expr ')' Stmt    (rule 35)
	Stmt -> 'for' '(' VIdent '=' Expr . 'to' Expr 'by' Expr ')' Stmt    (rule 36)
	Stmt -> 'for' '(' VIdent '=' Expr . 'down' 'to' Expr ')' Stmt    (rule 37)
	Stmt -> 'for' '(' VIdent '=' Expr . 'down' 'to' Expr 'by' Expr ')' Stmt    (rule 38)

	'to'           shift, and enter state 172
	'down'         shift, and enter state 173


State 172

	Stmt -> 'for' '(' VIdent '=' Expr 'to' . Expr ')' Stmt    (rule 35)
	Stmt -> 'for' '(' VIdent '=' Expr 'to' . Expr 'by' Expr ')' Stmt    (rule 36)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 179
	UnaryOp        goto state 69

State 173

	Stmt -> 'for' '(' VIdent '=' Expr 'down' . 'to' Expr ')' Stmt    (rule 37)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' . 'to' Expr 'by' Expr ')' Stmt    (rule 38)

	'to'           shift, and enter state 178


State 174

	Stmt -> 'for' '(' VIdent 'in' Expr ')' . Stmt       (rule 39)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 177
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 175

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 33)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 176
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 176

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'++'           reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'--'           reduce using rule 33
	';'            reduce using rule 33
	'='            reduce using rule 33
	'\\'           reduce using rule 33
	']'            reduce using rule 33
	'bool'         reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'null'         reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'~'            reduce using rule 33
	'for'          reduce using rule 33
	'to'           reduce using rule 33
	'down'         reduce using rule 33
	'by'           reduce using rule 33
	L_integ        reduce using rule 33
	L_CIdent       reduce using rule 33
	L_VIdent       reduce using rule 33


State 177

	Stmt -> 'for' '(' VIdent 'in' Expr ')' Stmt .       (rule 39)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'++'           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'--'           reduce using rule 39
	';'            reduce using rule 39
	'='            reduce using rule 39
	'\\'           reduce using rule 39
	']'            reduce using rule 39
	'bool'         reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'new'          reduce using rule 39
	'null'         reduce using rule 39
	'return'       reduce using rule 39
	'true'         reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	'~'            reduce using rule 39
	'for'          reduce using rule 39
	'to'           reduce using rule 39
	'down'         reduce using rule 39
	'by'           reduce using rule 39
	L_integ        reduce using rule 39
	L_CIdent       reduce using rule 39
	L_VIdent       reduce using rule 39


State 178

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' . Expr ')' Stmt    (rule 37)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' . Expr 'by' Expr ')' Stmt    (rule 38)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 182
	UnaryOp        goto state 69

State 179

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr . ')' Stmt    (rule 35)
	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr . 'by' Expr ')' Stmt    (rule 36)

	')'            shift, and enter state 180
	'by'           shift, and enter state 181


State 180

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr ')' . Stmt    (rule 35)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 186
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 181

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' . Expr ')' Stmt    (rule 36)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 185
	UnaryOp        goto state 69

State 182

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr . ')' Stmt    (rule 37)
	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr . 'by' Expr ')' Stmt    (rule 38)

	')'            shift, and enter state 183
	'by'           shift, and enter state 184


State 183

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr ')' . Stmt    (rule 37)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 189
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 184

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' . Expr ')' Stmt    (rule 38)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	'\\'           shift, and enter state 74
	'false'        shift, and enter state 75
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'true'         shift, and enter state 80
	'~'            shift, and enter state 83
	L_integ        shift, and enter state 2
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	VIdent         goto state 58
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 188
	UnaryOp        goto state 69

State 185

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' Expr . ')' Stmt    (rule 36)

	')'            shift, and enter state 187


State 186

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr ')' Stmt .    (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'++'           reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'--'           reduce using rule 35
	';'            reduce using rule 35
	'='            reduce using rule 35
	'\\'           reduce using rule 35
	']'            reduce using rule 35
	'bool'         reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'new'          reduce using rule 35
	'null'         reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	'~'            reduce using rule 35
	'for'          reduce using rule 35
	'to'           reduce using rule 35
	'down'         reduce using rule 35
	'by'           reduce using rule 35
	L_integ        reduce using rule 35
	L_CIdent       reduce using rule 35
	L_VIdent       reduce using rule 35


State 187

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' Expr ')' . Stmt    (rule 36)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 191
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 188

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr . ')' Stmt    (rule 38)

	')'            shift, and enter state 190


State 189

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr ')' Stmt .    (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'++'           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'--'           reduce using rule 37
	';'            reduce using rule 37
	'='            reduce using rule 37
	'\\'           reduce using rule 37
	']'            reduce using rule 37
	'bool'         reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'new'          reduce using rule 37
	'null'         reduce using rule 37
	'return'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	'~'            reduce using rule 37
	'for'          reduce using rule 37
	'to'           reduce using rule 37
	'down'         reduce using rule 37
	'by'           reduce using rule 37
	L_integ        reduce using rule 37
	L_CIdent       reduce using rule 37
	L_VIdent       reduce using rule 37


State 190

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' . Stmt    (rule 38)

	'!'            shift, and enter state 70
	'('            shift, and enter state 71
	'-'            shift, and enter state 72
	';'            shift, and enter state 73
	'\\'           shift, and enter state 74
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 10
	'new'          shift, and enter state 77
	'null'         shift, and enter state 78
	'return'       shift, and enter state 79
	'true'         shift, and enter state 80
	'void'         shift, and enter state 11
	'while'        shift, and enter state 81
	'{'            shift, and enter state 46
	'~'            shift, and enter state 83
	'for'          shift, and enter state 84
	L_integ        shift, and enter state 2
	L_CIdent       shift, and enter state 12
	L_VIdent       shift, and enter state 17

	Integer        goto state 57
	CIdent         goto state 3
	VIdent         goto state 58
	Block          goto state 59
	Stmt           goto state 192
	Type           goto state 61
	Expr6          goto state 62
	Expr5          goto state 63
	Expr4          goto state 64
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	UnaryOp        goto state 69

State 191

	Stmt -> 'for' '(' VIdent '=' Expr 'to' Expr 'by' Expr ')' Stmt .    (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'++'           reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'--'           reduce using rule 36
	';'            reduce using rule 36
	'='            reduce using rule 36
	'\\'           reduce using rule 36
	']'            reduce using rule 36
	'bool'         reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'new'          reduce using rule 36
	'null'         reduce using rule 36
	'return'       reduce using rule 36
	'true'         reduce using rule 36
	'void'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	'~'            reduce using rule 36
	'for'          reduce using rule 36
	'to'           reduce using rule 36
	'down'         reduce using rule 36
	'by'           reduce using rule 36
	L_integ        reduce using rule 36
	L_CIdent       reduce using rule 36
	L_VIdent       reduce using rule 36


State 192

	Stmt -> 'for' '(' VIdent '=' Expr 'down' 'to' Expr 'by' Expr ')' Stmt .    (rule 38)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'++'           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'--'           reduce using rule 38
	';'            reduce using rule 38
	'='            reduce using rule 38
	'\\'           reduce using rule 38
	']'            reduce using rule 38
	'bool'         reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'new'          reduce using rule 38
	'null'         reduce using rule 38
	'return'       reduce using rule 38
	'true'         reduce using rule 38
	'void'         reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	'~'            reduce using rule 38
	'for'          reduce using rule 38
	'to'           reduce using rule 38
	'down'         reduce using rule 38
	'by'           reduce using rule 38
	L_integ        reduce using rule 38
	L_CIdent       reduce using rule 38
	L_VIdent       reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 100
Number of terminals: 57
Number of non-terminals: 31
Number of states: 193
