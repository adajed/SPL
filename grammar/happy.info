-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from src/ParSPL.y
-----------------------------------------------------------------------------

state 108 contains 1 shift/reduce conflicts.

rule 33 is unused
rule 34 is unused
rule 35 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	Program -> ListTopDef                              (3)
	TopDef -> Type Ident '(' ListArgument ')' Block    (4)
	ListTopDef -> TopDef                               (5)
	ListTopDef -> TopDef ListTopDef                    (6)
	Argument -> Type Ident                             (7)
	ListArgument ->                                    (8)
	ListArgument -> Argument                           (9)
	ListArgument -> Argument ',' ListArgument          (10)
	Block -> '{' ListStmt '}'                          (11)
	ListStmt ->                                        (12)
	ListStmt -> ListStmt Stmt                          (13)
	Stmt -> ';'                                        (14)
	Stmt -> Block                                      (15)
	Stmt -> Type ListItem ';'                          (16)
	Stmt -> Expr '=' Expr ';'                          (17)
	Stmt -> Expr '++' ';'                              (18)
	Stmt -> Expr '--' ';'                              (19)
	Stmt -> 'return' Expr ';'                          (20)
	Stmt -> 'return' ';'                               (21)
	Stmt -> 'if' '(' Expr ')' Stmt                     (22)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (23)
	Stmt -> 'while' '(' Expr ')' Stmt                  (24)
	Stmt -> Expr ';'                                   (25)
	Item -> Ident                                      (26)
	Item -> Ident '=' Expr                             (27)
	ListItem -> Item                                   (28)
	ListItem -> Item ',' ListItem                      (29)
	Type -> 'int'                                      (30)
	Type -> 'bool'                                     (31)
	Type -> 'void'                                     (32)
	ListType ->                                        (33)
	ListType -> Type                                   (34)
	ListType -> Type ',' ListType                      (35)
	Expr6 -> Integer                                   (36)
	Expr6 -> 'true'                                    (37)
	Expr6 -> 'false'                                   (38)
	Expr6 -> Ident                                     (39)
	Expr6 -> Expr6 '(' ListExpr ')'                    (40)
	Expr6 -> '(' Expr ')'                              (41)
	Expr5 -> UnaryOp Expr5                             (42)
	Expr5 -> Expr6                                     (43)
	Expr4 -> Expr4 MulOp Expr5                         (44)
	Expr4 -> Expr5                                     (45)
	Expr3 -> Expr3 AddOp Expr4                         (46)
	Expr3 -> Expr4                                     (47)
	Expr2 -> Expr2 RelOp Expr3                         (48)
	Expr2 -> Expr3                                     (49)
	Expr1 -> Expr2 '&&' Expr1                          (50)
	Expr1 -> Expr2                                     (51)
	Expr -> Expr1 '||' Expr                            (52)
	Expr -> Expr1                                      (53)
	ListExpr ->                                        (54)
	ListExpr -> Expr                                   (55)
	ListExpr -> Expr ',' ListExpr                      (56)
	UnaryOp -> '-'                                     (57)
	UnaryOp -> '!'                                     (58)
	UnaryOp -> '~'                                     (59)
	AddOp -> '+'                                       (60)
	AddOp -> '-'                                       (61)
	MulOp -> '*'                                       (62)
	MulOp -> '/'                                       (63)
	MulOp -> '%'                                       (64)
	MulOp -> '<<'                                      (65)
	MulOp -> '>>'                                      (66)
	MulOp -> '&'                                       (67)
	MulOp -> '|'                                       (68)
	MulOp -> '^'                                       (69)
	RelOp -> '<'                                       (70)
	RelOp -> '<='                                      (71)
	RelOp -> '>'                                       (72)
	RelOp -> '>='                                      (73)
	RelOp -> '=='                                      (74)
	RelOp -> '!='                                      (75)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<<'           { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'>>'           { PT _ (TS _ 23) }
	'^'            { PT _ (TS _ 24) }
	'bool'         { PT _ (TS _ 25) }
	'else'         { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'return'       { PT _ (TS _ 30) }
	'true'         { PT _ (TS _ 31) }
	'void'         { PT _ (TS _ 32) }
	'while'        { PT _ (TS _ 33) }
	'{'            { PT _ (TS _ 34) }
	'|'            { PT _ (TS _ 35) }
	'||'           { PT _ (TS _ 36) }
	'}'            { PT _ (TS _ 37) }
	'~'            { PT _ (TS _ 38) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	Program         rule  3
	TopDef          rule  4
	ListTopDef      rules 5, 6
	Argument        rule  7
	ListArgument    rules 8, 9, 10
	Block           rule  11
	ListStmt        rules 12, 13
	Stmt            rules 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
	Item            rules 26, 27
	ListItem        rules 28, 29
	Type            rules 30, 31, 32
	ListType        rules 33, 34, 35
	Expr6           rules 36, 37, 38, 39, 40, 41
	Expr5           rules 42, 43
	Expr4           rules 44, 45
	Expr3           rules 46, 47
	Expr2           rules 48, 49
	Expr1           rules 50, 51
	Expr            rules 52, 53
	ListExpr        rules 54, 55, 56
	UnaryOp         rules 57, 58, 59
	AddOp           rules 60, 61
	MulOp           rules 62, 63, 64, 65, 66, 67, 68, 69
	RelOp           rules 70, 71, 72, 73, 74, 75

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'void'         shift, and enter state 9

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<<'           reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'>>'           reduce using rule 1
	'^'            reduce using rule 1
	'|'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 5)
	ListTopDef -> TopDef . ListTopDef                   (rule 6)

	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'void'         shift, and enter state 9
	%eof           reduce using rule 5

	TopDef         goto state 4
	ListTopDef     goto state 11
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 3)

	%eof           reduce using rule 3


State 6

	TopDef -> Type . Ident '(' ListArgument ')' Block    (rule 4)

	L_ident        shift, and enter state 2

	Ident          goto state 10

State 7

	Type -> 'bool' .                                    (rule 31)

	L_ident        reduce using rule 31


State 8

	Type -> 'int' .                                     (rule 30)

	L_ident        reduce using rule 30


State 9

	Type -> 'void' .                                    (rule 32)

	L_ident        reduce using rule 32


State 10

	TopDef -> Type Ident . '(' ListArgument ')' Block    (rule 4)

	'('            shift, and enter state 12


State 11

	ListTopDef -> TopDef ListTopDef .                   (rule 6)

	%eof           reduce using rule 6


State 12

	TopDef -> Type Ident '(' . ListArgument ')' Block    (rule 4)

	')'            reduce using rule 8
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'void'         shift, and enter state 9

	Argument       goto state 13
	ListArgument   goto state 14
	Type           goto state 15

State 13

	ListArgument -> Argument .                          (rule 9)
	ListArgument -> Argument . ',' ListArgument         (rule 10)

	')'            reduce using rule 9
	','            shift, and enter state 18


State 14

	TopDef -> Type Ident '(' ListArgument . ')' Block    (rule 4)

	')'            shift, and enter state 17


State 15

	Argument -> Type . Ident                            (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 16

State 16

	Argument -> Type Ident .                            (rule 7)

	')'            reduce using rule 7
	','            reduce using rule 7


State 17

	TopDef -> Type Ident '(' ListArgument ')' . Block    (rule 4)

	'{'            shift, and enter state 21

	Block          goto state 20

State 18

	ListArgument -> Argument ',' . ListArgument         (rule 10)

	')'            reduce using rule 8
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'void'         shift, and enter state 9

	Argument       goto state 13
	ListArgument   goto state 19
	Type           goto state 15

State 19

	ListArgument -> Argument ',' ListArgument .         (rule 10)

	')'            reduce using rule 10


State 20

	TopDef -> Type Ident '(' ListArgument ')' Block .    (rule 4)

	'bool'         reduce using rule 4
	'int'          reduce using rule 4
	'void'         reduce using rule 4
	%eof           reduce using rule 4


State 21

	Block -> '{' . ListStmt '}'                         (rule 11)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'bool'         reduce using rule 12
	'false'        reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	'~'            reduce using rule 12
	L_ident        reduce using rule 12
	L_integ        reduce using rule 12

	ListStmt       goto state 22

State 22

	Block -> '{' ListStmt . '}'                         (rule 11)
	ListStmt -> ListStmt . Stmt                         (rule 13)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'bool'         shift, and enter state 7
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 8
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 9
	'while'        shift, and enter state 44
	'{'            shift, and enter state 21
	'}'            shift, and enter state 45
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Block          goto state 25
	Stmt           goto state 26
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34
	UnaryOp        goto state 35

State 23

	Expr6 -> Ident .                                    (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'++'           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'--'           reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<<'           reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'>>'           reduce using rule 39
	'^'            reduce using rule 39
	'|'            reduce using rule 39
	'||'           reduce using rule 39


State 24

	Expr6 -> Integer .                                  (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&'            reduce using rule 36
	'&&'           reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	'++'           reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'--'           reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<<'           reduce using rule 36
	'<='           reduce using rule 36
	'='            reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'>>'           reduce using rule 36
	'^'            reduce using rule 36
	'|'            reduce using rule 36
	'||'           reduce using rule 36


State 25

	Stmt -> Block .                                     (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'bool'         reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	'~'            reduce using rule 15
	L_ident        reduce using rule 15
	L_integ        reduce using rule 15


State 26

	ListStmt -> ListStmt Stmt .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'bool'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	'~'            reduce using rule 13
	L_ident        reduce using rule 13
	L_integ        reduce using rule 13


State 27

	Stmt -> Type . ListItem ';'                         (rule 16)

	L_ident        shift, and enter state 2

	Ident          goto state 80
	Item           goto state 81
	ListItem       goto state 82

State 28

	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 40)
	Expr5 -> Expr6 .                                    (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 79
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'++'           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'--'           reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<<'           reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'>>'           reduce using rule 43
	'^'            reduce using rule 43
	'|'            reduce using rule 43
	'||'           reduce using rule 43


State 29

	Expr4 -> Expr5 .                                    (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	'++'           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<<'           reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'>>'           reduce using rule 45
	'^'            reduce using rule 45
	'|'            reduce using rule 45
	'||'           reduce using rule 45


State 30

	Expr4 -> Expr4 . MulOp Expr5                        (rule 44)
	Expr3 -> Expr4 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            shift, and enter state 71
	'&'            shift, and enter state 72
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            shift, and enter state 73
	'+'            reduce using rule 47
	'++'           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'--'           reduce using rule 47
	'/'            shift, and enter state 74
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<<'           shift, and enter state 75
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'>>'           shift, and enter state 76
	'^'            shift, and enter state 77
	'|'            shift, and enter state 78
	'||'           reduce using rule 47

	MulOp          goto state 70

State 31

	Expr3 -> Expr3 . AddOp Expr4                        (rule 46)
	Expr2 -> Expr3 .                                    (rule 49)

	'!='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'+'            shift, and enter state 68
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            shift, and enter state 69
	'--'           reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49

	AddOp          goto state 67

State 32

	Expr2 -> Expr2 . RelOp Expr3                        (rule 48)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 50)
	Expr1 -> Expr2 .                                    (rule 51)

	'!='           shift, and enter state 60
	'&&'           shift, and enter state 61
	')'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'--'           reduce using rule 51
	';'            reduce using rule 51
	'<'            shift, and enter state 62
	'<='           shift, and enter state 63
	'='            reduce using rule 51
	'=='           shift, and enter state 64
	'>'            shift, and enter state 65
	'>='           shift, and enter state 66
	'||'           reduce using rule 51

	RelOp          goto state 59

State 33

	Expr -> Expr1 . '||' Expr                           (rule 52)
	Expr -> Expr1 .                                     (rule 53)

	')'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'--'           reduce using rule 53
	';'            reduce using rule 53
	'='            reduce using rule 53
	'||'           shift, and enter state 58


State 34

	Stmt -> Expr . '=' Expr ';'                         (rule 17)
	Stmt -> Expr . '++' ';'                             (rule 18)
	Stmt -> Expr . '--' ';'                             (rule 19)
	Stmt -> Expr . ';'                                  (rule 25)

	'++'           shift, and enter state 54
	'--'           shift, and enter state 55
	';'            shift, and enter state 56
	'='            shift, and enter state 57


State 35

	Expr5 -> UnaryOp . Expr5                            (rule 42)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 53
	UnaryOp        goto state 35

State 36

	UnaryOp -> '!' .                                    (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	'~'            reduce using rule 58
	L_ident        reduce using rule 58
	L_integ        reduce using rule 58


State 37

	Expr6 -> '(' . Expr ')'                             (rule 41)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 52
	UnaryOp        goto state 35

State 38

	UnaryOp -> '-' .                                    (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	'~'            reduce using rule 57
	L_ident        reduce using rule 57
	L_integ        reduce using rule 57


State 39

	Stmt -> ';' .                                       (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'bool'         reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'void'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	'~'            reduce using rule 14
	L_ident        reduce using rule 14
	L_integ        reduce using rule 14


State 40

	Expr6 -> 'false' .                                  (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'--'           reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<<'           reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'>>'           reduce using rule 38
	'^'            reduce using rule 38
	'|'            reduce using rule 38
	'||'           reduce using rule 38


State 41

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 22)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 23)

	'('            shift, and enter state 51


State 42

	Stmt -> 'return' . Expr ';'                         (rule 20)
	Stmt -> 'return' . ';'                              (rule 21)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 50
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 49
	UnaryOp        goto state 35

State 43

	Expr6 -> 'true' .                                   (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	'++'           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'--'           reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<<'           reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'>>'           reduce using rule 37
	'^'            reduce using rule 37
	'|'            reduce using rule 37
	'||'           reduce using rule 37


State 44

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 24)

	'('            shift, and enter state 48


State 45

	Block -> '{' ListStmt '}' .                         (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'bool'         reduce using rule 11
	'else'         reduce using rule 11
	'false'        reduce using rule 11
	'if'           reduce using rule 11
	'int'          reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'void'         reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	'~'            reduce using rule 11
	L_ident        reduce using rule 11
	L_integ        reduce using rule 11
	%eof           reduce using rule 11


State 46

	UnaryOp -> '~' .                                    (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	'~'            reduce using rule 59
	L_ident        reduce using rule 59
	L_integ        reduce using rule 59


State 47

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<<'           reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'>>'           reduce using rule 2
	'^'            reduce using rule 2
	'|'            reduce using rule 2
	'||'           reduce using rule 2


State 48

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 24)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 99
	UnaryOp        goto state 35

State 49

	Stmt -> 'return' Expr . ';'                         (rule 20)

	';'            shift, and enter state 98


State 50

	Stmt -> 'return' ';' .                              (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'~'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21


State 51

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 22)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 23)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 97
	UnaryOp        goto state 35

State 52

	Expr6 -> '(' Expr . ')'                             (rule 41)

	')'            shift, and enter state 96


State 53

	Expr5 -> UnaryOp Expr5 .                            (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	'++'           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'--'           reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<<'           reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'>>'           reduce using rule 42
	'^'            reduce using rule 42
	'|'            reduce using rule 42
	'||'           reduce using rule 42


State 54

	Stmt -> Expr '++' . ';'                             (rule 18)

	';'            shift, and enter state 95


State 55

	Stmt -> Expr '--' . ';'                             (rule 19)

	';'            shift, and enter state 94


State 56

	Stmt -> Expr ';' .                                  (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'~'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25


State 57

	Stmt -> Expr '=' . Expr ';'                         (rule 17)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 93
	UnaryOp        goto state 35

State 58

	Expr -> Expr1 '||' . Expr                           (rule 52)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 92
	UnaryOp        goto state 35

State 59

	Expr2 -> Expr2 RelOp . Expr3                        (rule 48)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 91
	UnaryOp        goto state 35

State 60

	RelOp -> '!=' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	'~'            reduce using rule 75
	L_ident        reduce using rule 75
	L_integ        reduce using rule 75


State 61

	Expr1 -> Expr2 '&&' . Expr1                         (rule 50)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 90
	UnaryOp        goto state 35

State 62

	RelOp -> '<' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	'~'            reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70


State 63

	RelOp -> '<=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	'~'            reduce using rule 71
	L_ident        reduce using rule 71
	L_integ        reduce using rule 71


State 64

	RelOp -> '==' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	'~'            reduce using rule 74
	L_ident        reduce using rule 74
	L_integ        reduce using rule 74


State 65

	RelOp -> '>' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	'~'            reduce using rule 72
	L_ident        reduce using rule 72
	L_integ        reduce using rule 72


State 66

	RelOp -> '>=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	'~'            reduce using rule 73
	L_ident        reduce using rule 73
	L_integ        reduce using rule 73


State 67

	Expr3 -> Expr3 AddOp . Expr4                        (rule 46)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 89
	UnaryOp        goto state 35

State 68

	AddOp -> '+' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	'~'            reduce using rule 60
	L_ident        reduce using rule 60
	L_integ        reduce using rule 60


State 69

	AddOp -> '-' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	'~'            reduce using rule 61
	L_ident        reduce using rule 61
	L_integ        reduce using rule 61


State 70

	Expr4 -> Expr4 MulOp . Expr5                        (rule 44)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 88
	UnaryOp        goto state 35

State 71

	MulOp -> '%' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	'~'            reduce using rule 64
	L_ident        reduce using rule 64
	L_integ        reduce using rule 64


State 72

	MulOp -> '&' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	'~'            reduce using rule 67
	L_ident        reduce using rule 67
	L_integ        reduce using rule 67


State 73

	MulOp -> '*' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	'~'            reduce using rule 62
	L_ident        reduce using rule 62
	L_integ        reduce using rule 62


State 74

	MulOp -> '/' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	'~'            reduce using rule 63
	L_ident        reduce using rule 63
	L_integ        reduce using rule 63


State 75

	MulOp -> '<<' .                                     (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	'~'            reduce using rule 65
	L_ident        reduce using rule 65
	L_integ        reduce using rule 65


State 76

	MulOp -> '>>' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	'~'            reduce using rule 66
	L_ident        reduce using rule 66
	L_integ        reduce using rule 66


State 77

	MulOp -> '^' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	'~'            reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69


State 78

	MulOp -> '|' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	'~'            reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68


State 79

	Expr6 -> Expr6 '(' . ListExpr ')'                   (rule 40)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	')'            reduce using rule 54
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 86
	ListExpr       goto state 87
	UnaryOp        goto state 35

State 80

	Item -> Ident .                                     (rule 26)
	Item -> Ident . '=' Expr                            (rule 27)

	','            reduce using rule 26
	';'            reduce using rule 26
	'='            shift, and enter state 85


State 81

	ListItem -> Item .                                  (rule 28)
	ListItem -> Item . ',' ListItem                     (rule 29)

	','            shift, and enter state 84
	';'            reduce using rule 28


State 82

	Stmt -> Type ListItem . ';'                         (rule 16)

	';'            shift, and enter state 83


State 83

	Stmt -> Type ListItem ';' .                         (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'bool'         reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	'~'            reduce using rule 16
	L_ident        reduce using rule 16
	L_integ        reduce using rule 16


State 84

	ListItem -> Item ',' . ListItem                     (rule 29)

	L_ident        shift, and enter state 2

	Ident          goto state 80
	Item           goto state 81
	ListItem       goto state 106

State 85

	Item -> Ident '=' . Expr                            (rule 27)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 105
	UnaryOp        goto state 35

State 86

	ListExpr -> Expr .                                  (rule 55)
	ListExpr -> Expr . ',' ListExpr                     (rule 56)

	')'            reduce using rule 55
	','            shift, and enter state 104


State 87

	Expr6 -> Expr6 '(' ListExpr . ')'                   (rule 40)

	')'            shift, and enter state 103


State 88

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	'++'           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'--'           reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<<'           reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'>>'           reduce using rule 44
	'^'            reduce using rule 44
	'|'            reduce using rule 44
	'||'           reduce using rule 44


State 89

	Expr4 -> Expr4 . MulOp Expr5                        (rule 44)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 46)

	'!='           reduce using rule 46
	'%'            shift, and enter state 71
	'&'            shift, and enter state 72
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            shift, and enter state 73
	'+'            reduce using rule 46
	'++'           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'--'           reduce using rule 46
	'/'            shift, and enter state 74
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<<'           shift, and enter state 75
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'>>'           shift, and enter state 76
	'^'            shift, and enter state 77
	'|'            shift, and enter state 78
	'||'           reduce using rule 46

	MulOp          goto state 70

State 90

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 50)

	')'            reduce using rule 50
	'++'           reduce using rule 50
	','            reduce using rule 50
	'--'           reduce using rule 50
	';'            reduce using rule 50
	'='            reduce using rule 50
	'||'           reduce using rule 50


State 91

	Expr3 -> Expr3 . AddOp Expr4                        (rule 46)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 48)

	'!='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'+'            shift, and enter state 68
	'++'           reduce using rule 48
	','            reduce using rule 48
	'-'            shift, and enter state 69
	'--'           reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48

	AddOp          goto state 67

State 92

	Expr -> Expr1 '||' Expr .                           (rule 52)

	')'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'--'           reduce using rule 52
	';'            reduce using rule 52
	'='            reduce using rule 52


State 93

	Stmt -> Expr '=' Expr . ';'                         (rule 17)

	';'            shift, and enter state 102


State 94

	Stmt -> Expr '--' ';' .                             (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'~'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19


State 95

	Stmt -> Expr '++' ';' .                             (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'~'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18


State 96

	Expr6 -> '(' Expr ')' .                             (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'--'           reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<<'           reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'>>'           reduce using rule 41
	'^'            reduce using rule 41
	'|'            reduce using rule 41
	'||'           reduce using rule 41


State 97

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 22)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 23)

	')'            shift, and enter state 101


State 98

	Stmt -> 'return' Expr ';' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'~'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20


State 99

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 24)

	')'            shift, and enter state 100


State 100

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 24)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'bool'         shift, and enter state 7
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 8
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 9
	'while'        shift, and enter state 44
	'{'            shift, and enter state 21
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Block          goto state 25
	Stmt           goto state 109
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34
	UnaryOp        goto state 35

State 101

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 22)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 23)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'bool'         shift, and enter state 7
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 8
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 9
	'while'        shift, and enter state 44
	'{'            shift, and enter state 21
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Block          goto state 25
	Stmt           goto state 108
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34
	UnaryOp        goto state 35

State 102

	Stmt -> Expr '=' Expr ';' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'~'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17


State 103

	Expr6 -> Expr6 '(' ListExpr ')' .                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'++'           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'--'           reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<<'           reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'>>'           reduce using rule 40
	'^'            reduce using rule 40
	'|'            reduce using rule 40
	'||'           reduce using rule 40


State 104

	ListExpr -> Expr ',' . ListExpr                     (rule 56)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	')'            reduce using rule 54
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 86
	ListExpr       goto state 107
	UnaryOp        goto state 35

State 105

	Item -> Ident '=' Expr .                            (rule 27)

	','            reduce using rule 27
	';'            reduce using rule 27


State 106

	ListItem -> Item ',' ListItem .                     (rule 29)

	';'            reduce using rule 29


State 107

	ListExpr -> Expr ',' ListExpr .                     (rule 56)

	')'            reduce using rule 56


State 108

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 22)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 23)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'else'         shift, and enter state 110
			(reduce using rule 22)

	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'~'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22


State 109

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'~'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24


State 110

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 23)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'bool'         shift, and enter state 7
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 8
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 9
	'while'        shift, and enter state 44
	'{'            shift, and enter state 21
	'~'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47

	Ident          goto state 23
	Integer        goto state 24
	Block          goto state 25
	Stmt           goto state 111
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34
	UnaryOp        goto state 35

State 111

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'~'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 76
Number of terminals: 40
Number of non-terminals: 27
Number of states: 112
