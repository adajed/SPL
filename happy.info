-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from src/ParSPL.y
-----------------------------------------------------------------------------

state 117 contains 1 shift/reduce conflicts.

rule 35 is unused
rule 36 is unused
rule 37 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	Program -> ListTopDef                              (3)
	TopDef -> Type Ident '(' ListArgument ')' Block    (4)
	ListTopDef -> TopDef                               (5)
	ListTopDef -> TopDef ListTopDef                    (6)
	Argument -> Type Ident                             (7)
	ListArgument ->                                    (8)
	ListArgument -> Argument                           (9)
	ListArgument -> Argument ',' ListArgument          (10)
	Block -> '{' ListStmt '}'                          (11)
	ListStmt ->                                        (12)
	ListStmt -> ListStmt Stmt                          (13)
	Stmt -> ';'                                        (14)
	Stmt -> Block                                      (15)
	Stmt -> Type ListItem ';'                          (16)
	Stmt -> Expr '=' Expr ';'                          (17)
	Stmt -> Expr '++' ';'                              (18)
	Stmt -> Expr '--' ';'                              (19)
	Stmt -> 'return' Expr ';'                          (20)
	Stmt -> 'return' ';'                               (21)
	Stmt -> 'if' '(' Expr ')' Stmt                     (22)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (23)
	Stmt -> 'while' '(' Expr ')' Stmt                  (24)
	Stmt -> Expr ';'                                   (25)
	Item -> Ident                                      (26)
	Item -> Ident '=' Expr                             (27)
	ListItem -> Item                                   (28)
	ListItem -> Item ',' ListItem                      (29)
	BasicType -> 'int'                                 (30)
	BasicType -> 'bool'                                (31)
	BasicType -> 'void'                                (32)
	Type -> BasicType                                  (33)
	Type -> Type '[]'                                  (34)
	ListType ->                                        (35)
	ListType -> Type                                   (36)
	ListType -> Type ',' ListType                      (37)
	Expr6 -> Integer                                   (38)
	Expr6 -> 'true'                                    (39)
	Expr6 -> 'false'                                   (40)
	Expr6 -> Ident                                     (41)
	Expr6 -> Expr6 '[' Expr ']'                        (42)
	Expr6 -> Expr6 '(' ListExpr ')'                    (43)
	Expr6 -> '(' Expr ')'                              (44)
	Expr5 -> UnaryOp Expr5                             (45)
	Expr5 -> Expr6                                     (46)
	Expr4 -> Expr4 MulOp Expr5                         (47)
	Expr4 -> Expr5                                     (48)
	Expr3 -> Expr3 AddOp Expr4                         (49)
	Expr3 -> Expr4                                     (50)
	Expr2 -> Expr2 RelOp Expr3                         (51)
	Expr2 -> Expr3                                     (52)
	Expr1 -> Expr2 '&&' Expr1                          (53)
	Expr1 -> Expr2                                     (54)
	Expr -> Expr1 '||' Expr                            (55)
	Expr -> 'new' Type '[' Expr ']'                    (56)
	Expr -> Expr1                                      (57)
	ListExpr ->                                        (58)
	ListExpr -> Expr                                   (59)
	ListExpr -> Expr ',' ListExpr                      (60)
	UnaryOp -> '-'                                     (61)
	UnaryOp -> '!'                                     (62)
	UnaryOp -> '~'                                     (63)
	AddOp -> '+'                                       (64)
	AddOp -> '-'                                       (65)
	MulOp -> '*'                                       (66)
	MulOp -> '/'                                       (67)
	MulOp -> '%'                                       (68)
	MulOp -> '<<'                                      (69)
	MulOp -> '>>'                                      (70)
	MulOp -> '&'                                       (71)
	MulOp -> '|'                                       (72)
	MulOp -> '^'                                       (73)
	RelOp -> '<'                                       (74)
	RelOp -> '<='                                      (75)
	RelOp -> '>'                                       (76)
	RelOp -> '>='                                      (77)
	RelOp -> '=='                                      (78)
	RelOp -> '!='                                      (79)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<<'           { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'>>'           { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	'[]'           { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'^'            { PT _ (TS _ 27) }
	'bool'         { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'new'          { PT _ (TS _ 33) }
	'return'       { PT _ (TS _ 34) }
	'true'         { PT _ (TS _ 35) }
	'void'         { PT _ (TS _ 36) }
	'while'        { PT _ (TS _ 37) }
	'{'            { PT _ (TS _ 38) }
	'|'            { PT _ (TS _ 39) }
	'||'           { PT _ (TS _ 40) }
	'}'            { PT _ (TS _ 41) }
	'~'            { PT _ (TS _ 42) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	Program         rule  3
	TopDef          rule  4
	ListTopDef      rules 5, 6
	Argument        rule  7
	ListArgument    rules 8, 9, 10
	Block           rule  11
	ListStmt        rules 12, 13
	Stmt            rules 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
	Item            rules 26, 27
	ListItem        rules 28, 29
	BasicType       rules 30, 31, 32
	Type            rules 33, 34
	ListType        rules 35, 36, 37
	Expr6           rules 38, 39, 40, 41, 42, 43, 44
	Expr5           rules 45, 46
	Expr4           rules 47, 48
	Expr3           rules 49, 50
	Expr2           rules 51, 52
	Expr1           rules 53, 54
	Expr            rules 55, 56, 57
	ListExpr        rules 58, 59, 60
	UnaryOp         rules 61, 62, 63
	AddOp           rules 64, 65
	MulOp           rules 66, 67, 68, 69, 70, 71, 72, 73
	RelOp           rules 74, 75, 76, 77, 78, 79

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	BasicType      goto state 6
	Type           goto state 7

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<<'           reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'>>'           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'|'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 5)
	ListTopDef -> TopDef . ListTopDef                   (rule 6)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 5

	TopDef         goto state 4
	ListTopDef     goto state 13
	BasicType      goto state 6
	Type           goto state 7

State 5

	Program -> ListTopDef .                             (rule 3)

	%eof           reduce using rule 3


State 6

	Type -> BasicType .                                 (rule 33)

	'['            reduce using rule 33
	'[]'           reduce using rule 33
	L_ident        reduce using rule 33


State 7

	TopDef -> Type . Ident '(' ListArgument ')' Block    (rule 4)
	Type -> Type . '[]'                                 (rule 34)

	'[]'           shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 11

State 8

	BasicType -> 'bool' .                               (rule 31)

	'['            reduce using rule 31
	'[]'           reduce using rule 31
	L_ident        reduce using rule 31


State 9

	BasicType -> 'int' .                                (rule 30)

	'['            reduce using rule 30
	'[]'           reduce using rule 30
	L_ident        reduce using rule 30


State 10

	BasicType -> 'void' .                               (rule 32)

	'['            reduce using rule 32
	'[]'           reduce using rule 32
	L_ident        reduce using rule 32


State 11

	TopDef -> Type Ident . '(' ListArgument ')' Block    (rule 4)

	'('            shift, and enter state 14


State 12

	Type -> Type '[]' .                                 (rule 34)

	'['            reduce using rule 34
	'[]'           reduce using rule 34
	L_ident        reduce using rule 34


State 13

	ListTopDef -> TopDef ListTopDef .                   (rule 6)

	%eof           reduce using rule 6


State 14

	TopDef -> Type Ident '(' . ListArgument ')' Block    (rule 4)

	')'            reduce using rule 8
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Argument       goto state 15
	ListArgument   goto state 16
	BasicType      goto state 6
	Type           goto state 17

State 15

	ListArgument -> Argument .                          (rule 9)
	ListArgument -> Argument . ',' ListArgument         (rule 10)

	')'            reduce using rule 9
	','            shift, and enter state 20


State 16

	TopDef -> Type Ident '(' ListArgument . ')' Block    (rule 4)

	')'            shift, and enter state 19


State 17

	Argument -> Type . Ident                            (rule 7)
	Type -> Type . '[]'                                 (rule 34)

	'[]'           shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 18

State 18

	Argument -> Type Ident .                            (rule 7)

	')'            reduce using rule 7
	','            reduce using rule 7


State 19

	TopDef -> Type Ident '(' ListArgument ')' . Block    (rule 4)

	'{'            shift, and enter state 23

	Block          goto state 22

State 20

	ListArgument -> Argument ',' . ListArgument         (rule 10)

	')'            reduce using rule 8
	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Argument       goto state 15
	ListArgument   goto state 21
	BasicType      goto state 6
	Type           goto state 17

State 21

	ListArgument -> Argument ',' ListArgument .         (rule 10)

	')'            reduce using rule 10


State 22

	TopDef -> Type Ident '(' ListArgument ')' Block .    (rule 4)

	'bool'         reduce using rule 4
	'int'          reduce using rule 4
	'void'         reduce using rule 4
	%eof           reduce using rule 4


State 23

	Block -> '{' . ListStmt '}'                         (rule 11)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'bool'         reduce using rule 12
	'false'        reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'new'          reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	'~'            reduce using rule 12
	L_ident        reduce using rule 12
	L_integ        reduce using rule 12

	ListStmt       goto state 24

State 24

	Block -> '{' ListStmt . '}'                         (rule 11)
	ListStmt -> ListStmt . Stmt                         (rule 13)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'new'          shift, and enter state 44
	'return'       shift, and enter state 45
	'true'         shift, and enter state 46
	'void'         shift, and enter state 10
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	'}'            shift, and enter state 48
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Block          goto state 27
	Stmt           goto state 28
	BasicType      goto state 6
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36
	UnaryOp        goto state 37

State 25

	Expr6 -> Ident .                                    (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'--'           reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<<'           reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'>>'           reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	'^'            reduce using rule 41
	'|'            reduce using rule 41
	'||'           reduce using rule 41


State 26

	Expr6 -> Integer .                                  (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'--'           reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<<'           reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'>>'           reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	'^'            reduce using rule 38
	'|'            reduce using rule 38
	'||'           reduce using rule 38


State 27

	Stmt -> Block .                                     (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'bool'         reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'new'          reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	'~'            reduce using rule 15
	L_ident        reduce using rule 15
	L_integ        reduce using rule 15


State 28

	ListStmt -> ListStmt Stmt .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'bool'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'new'          reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	'~'            reduce using rule 13
	L_ident        reduce using rule 13
	L_integ        reduce using rule 13


State 29

	Stmt -> Type . ListItem ';'                         (rule 16)
	Type -> Type . '[]'                                 (rule 34)

	'[]'           shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 85
	Item           goto state 86
	ListItem       goto state 87

State 30

	Expr6 -> Expr6 . '[' Expr ']'                       (rule 42)
	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 43)
	Expr5 -> Expr6 .                                    (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&'            reduce using rule 46
	'&&'           reduce using rule 46
	'('            shift, and enter state 83
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	'++'           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'--'           reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<<'           reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'>>'           reduce using rule 46
	'['            shift, and enter state 84
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'|'            reduce using rule 46
	'||'           reduce using rule 46


State 31

	Expr4 -> Expr5 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'--'           reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<<'           reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'>>'           reduce using rule 48
	']'            reduce using rule 48
	'^'            reduce using rule 48
	'|'            reduce using rule 48
	'||'           reduce using rule 48


State 32

	Expr4 -> Expr4 . MulOp Expr5                        (rule 47)
	Expr3 -> Expr4 .                                    (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 75
	'&'            shift, and enter state 76
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 77
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'/'            shift, and enter state 78
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<<'           shift, and enter state 79
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'>>'           shift, and enter state 80
	']'            reduce using rule 50
	'^'            shift, and enter state 81
	'|'            shift, and enter state 82
	'||'           reduce using rule 50

	MulOp          goto state 74

State 33

	Expr3 -> Expr3 . AddOp Expr4                        (rule 49)
	Expr2 -> Expr3 .                                    (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 72
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            shift, and enter state 73
	'--'           reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 71

State 34

	Expr2 -> Expr2 . RelOp Expr3                        (rule 51)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 53)
	Expr1 -> Expr2 .                                    (rule 54)

	'!='           shift, and enter state 64
	'&&'           shift, and enter state 65
	')'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'--'           reduce using rule 54
	';'            reduce using rule 54
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'='            reduce using rule 54
	'=='           shift, and enter state 68
	'>'            shift, and enter state 69
	'>='           shift, and enter state 70
	']'            reduce using rule 54
	'||'           reduce using rule 54

	RelOp          goto state 63

State 35

	Expr -> Expr1 . '||' Expr                           (rule 55)
	Expr -> Expr1 .                                     (rule 57)

	')'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'--'           reduce using rule 57
	';'            reduce using rule 57
	'='            reduce using rule 57
	']'            reduce using rule 57
	'||'           shift, and enter state 62


State 36

	Stmt -> Expr . '=' Expr ';'                         (rule 17)
	Stmt -> Expr . '++' ';'                             (rule 18)
	Stmt -> Expr . '--' ';'                             (rule 19)
	Stmt -> Expr . ';'                                  (rule 25)

	'++'           shift, and enter state 58
	'--'           shift, and enter state 59
	';'            shift, and enter state 60
	'='            shift, and enter state 61


State 37

	Expr5 -> UnaryOp . Expr5                            (rule 45)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 57
	UnaryOp        goto state 37

State 38

	UnaryOp -> '!' .                                    (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	'~'            reduce using rule 62
	L_ident        reduce using rule 62
	L_integ        reduce using rule 62


State 39

	Expr6 -> '(' . Expr ')'                             (rule 44)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 56
	UnaryOp        goto state 37

State 40

	UnaryOp -> '-' .                                    (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	'~'            reduce using rule 61
	L_ident        reduce using rule 61
	L_integ        reduce using rule 61


State 41

	Stmt -> ';' .                                       (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'bool'         reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'new'          reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'void'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	'~'            reduce using rule 14
	L_ident        reduce using rule 14
	L_integ        reduce using rule 14


State 42

	Expr6 -> 'false' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'++'           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'--'           reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<<'           reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'>>'           reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	'^'            reduce using rule 40
	'|'            reduce using rule 40
	'||'           reduce using rule 40


State 43

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 22)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 23)

	'('            shift, and enter state 55


State 44

	Expr -> 'new' . Type '[' Expr ']'                   (rule 56)

	'bool'         shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	BasicType      goto state 6
	Type           goto state 54

State 45

	Stmt -> 'return' . Expr ';'                         (rule 20)
	Stmt -> 'return' . ';'                              (rule 21)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 53
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 52
	UnaryOp        goto state 37

State 46

	Expr6 -> 'true' .                                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'++'           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'--'           reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<<'           reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'>>'           reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	'^'            reduce using rule 39
	'|'            reduce using rule 39
	'||'           reduce using rule 39


State 47

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 24)

	'('            shift, and enter state 51


State 48

	Block -> '{' ListStmt '}' .                         (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'bool'         reduce using rule 11
	'else'         reduce using rule 11
	'false'        reduce using rule 11
	'if'           reduce using rule 11
	'int'          reduce using rule 11
	'new'          reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'void'         reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	'~'            reduce using rule 11
	L_ident        reduce using rule 11
	L_integ        reduce using rule 11
	%eof           reduce using rule 11


State 49

	UnaryOp -> '~' .                                    (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	'~'            reduce using rule 63
	L_ident        reduce using rule 63
	L_integ        reduce using rule 63


State 50

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<<'           reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'>>'           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'^'            reduce using rule 2
	'|'            reduce using rule 2
	'||'           reduce using rule 2


State 51

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 24)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 106
	UnaryOp        goto state 37

State 52

	Stmt -> 'return' Expr . ';'                         (rule 20)

	';'            shift, and enter state 105


State 53

	Stmt -> 'return' ';' .                              (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'~'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21


State 54

	Type -> Type . '[]'                                 (rule 34)
	Expr -> 'new' Type . '[' Expr ']'                   (rule 56)

	'['            shift, and enter state 104
	'[]'           shift, and enter state 12


State 55

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 22)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 23)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 103
	UnaryOp        goto state 37

State 56

	Expr6 -> '(' Expr . ')'                             (rule 44)

	')'            shift, and enter state 102


State 57

	Expr5 -> UnaryOp Expr5 .                            (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	'++'           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<<'           reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'>>'           reduce using rule 45
	']'            reduce using rule 45
	'^'            reduce using rule 45
	'|'            reduce using rule 45
	'||'           reduce using rule 45


State 58

	Stmt -> Expr '++' . ';'                             (rule 18)

	';'            shift, and enter state 101


State 59

	Stmt -> Expr '--' . ';'                             (rule 19)

	';'            shift, and enter state 100


State 60

	Stmt -> Expr ';' .                                  (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'~'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25


State 61

	Stmt -> Expr '=' . Expr ';'                         (rule 17)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 99
	UnaryOp        goto state 37

State 62

	Expr -> Expr1 '||' . Expr                           (rule 55)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 98
	UnaryOp        goto state 37

State 63

	Expr2 -> Expr2 RelOp . Expr3                        (rule 51)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 97
	UnaryOp        goto state 37

State 64

	RelOp -> '!=' .                                     (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	'~'            reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79


State 65

	Expr1 -> Expr2 '&&' . Expr1                         (rule 53)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 96
	UnaryOp        goto state 37

State 66

	RelOp -> '<' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	'~'            reduce using rule 74
	L_ident        reduce using rule 74
	L_integ        reduce using rule 74


State 67

	RelOp -> '<=' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	'~'            reduce using rule 75
	L_ident        reduce using rule 75
	L_integ        reduce using rule 75


State 68

	RelOp -> '==' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	'~'            reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78


State 69

	RelOp -> '>' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	'~'            reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76


State 70

	RelOp -> '>=' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	'~'            reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77


State 71

	Expr3 -> Expr3 AddOp . Expr4                        (rule 49)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 95
	UnaryOp        goto state 37

State 72

	AddOp -> '+' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	'~'            reduce using rule 64
	L_ident        reduce using rule 64
	L_integ        reduce using rule 64


State 73

	AddOp -> '-' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	'~'            reduce using rule 65
	L_ident        reduce using rule 65
	L_integ        reduce using rule 65


State 74

	Expr4 -> Expr4 MulOp . Expr5                        (rule 47)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 94
	UnaryOp        goto state 37

State 75

	MulOp -> '%' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	'~'            reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68


State 76

	MulOp -> '&' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	'~'            reduce using rule 71
	L_ident        reduce using rule 71
	L_integ        reduce using rule 71


State 77

	MulOp -> '*' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	'~'            reduce using rule 66
	L_ident        reduce using rule 66
	L_integ        reduce using rule 66


State 78

	MulOp -> '/' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	'~'            reduce using rule 67
	L_ident        reduce using rule 67
	L_integ        reduce using rule 67


State 79

	MulOp -> '<<' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	'~'            reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69


State 80

	MulOp -> '>>' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	'~'            reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70


State 81

	MulOp -> '^' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	'~'            reduce using rule 73
	L_ident        reduce using rule 73
	L_integ        reduce using rule 73


State 82

	MulOp -> '|' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	'~'            reduce using rule 72
	L_ident        reduce using rule 72
	L_integ        reduce using rule 72


State 83

	Expr6 -> Expr6 '(' . ListExpr ')'                   (rule 43)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 58
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 92
	ListExpr       goto state 93
	UnaryOp        goto state 37

State 84

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 42)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 91
	UnaryOp        goto state 37

State 85

	Item -> Ident .                                     (rule 26)
	Item -> Ident . '=' Expr                            (rule 27)

	','            reduce using rule 26
	';'            reduce using rule 26
	'='            shift, and enter state 90


State 86

	ListItem -> Item .                                  (rule 28)
	ListItem -> Item . ',' ListItem                     (rule 29)

	','            shift, and enter state 89
	';'            reduce using rule 28


State 87

	Stmt -> Type ListItem . ';'                         (rule 16)

	';'            shift, and enter state 88


State 88

	Stmt -> Type ListItem ';' .                         (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'bool'         reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'new'          reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	'~'            reduce using rule 16
	L_ident        reduce using rule 16
	L_integ        reduce using rule 16


State 89

	ListItem -> Item ',' . ListItem                     (rule 29)

	L_ident        shift, and enter state 2

	Ident          goto state 85
	Item           goto state 86
	ListItem       goto state 115

State 90

	Item -> Ident '=' . Expr                            (rule 27)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 114
	UnaryOp        goto state 37

State 91

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 42)

	']'            shift, and enter state 113


State 92

	ListExpr -> Expr .                                  (rule 59)
	ListExpr -> Expr . ',' ListExpr                     (rule 60)

	')'            reduce using rule 59
	','            shift, and enter state 112


State 93

	Expr6 -> Expr6 '(' ListExpr . ')'                   (rule 43)

	')'            shift, and enter state 111


State 94

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'--'           reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<<'           reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'>>'           reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'|'            reduce using rule 47
	'||'           reduce using rule 47


State 95

	Expr4 -> Expr4 . MulOp Expr5                        (rule 47)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 49)

	'!='           reduce using rule 49
	'%'            shift, and enter state 75
	'&'            shift, and enter state 76
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            shift, and enter state 77
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'/'            shift, and enter state 78
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<<'           shift, and enter state 79
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'>>'           shift, and enter state 80
	']'            reduce using rule 49
	'^'            shift, and enter state 81
	'|'            shift, and enter state 82
	'||'           reduce using rule 49

	MulOp          goto state 74

State 96

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 53)

	')'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'--'           reduce using rule 53
	';'            reduce using rule 53
	'='            reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 97

	Expr3 -> Expr3 . AddOp Expr4                        (rule 49)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 51)

	'!='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'+'            shift, and enter state 72
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            shift, and enter state 73
	'--'           reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51

	AddOp          goto state 71

State 98

	Expr -> Expr1 '||' Expr .                           (rule 55)

	')'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'--'           reduce using rule 55
	';'            reduce using rule 55
	'='            reduce using rule 55
	']'            reduce using rule 55


State 99

	Stmt -> Expr '=' Expr . ';'                         (rule 17)

	';'            shift, and enter state 110


State 100

	Stmt -> Expr '--' ';' .                             (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'~'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19


State 101

	Stmt -> Expr '++' ';' .                             (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'~'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18


State 102

	Expr6 -> '(' Expr ')' .                             (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	'++'           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'--'           reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<<'           reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'>>'           reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'^'            reduce using rule 44
	'|'            reduce using rule 44
	'||'           reduce using rule 44


State 103

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 22)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 23)

	')'            shift, and enter state 109


State 104

	Expr -> 'new' Type '[' . Expr ']'                   (rule 56)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 108
	UnaryOp        goto state 37

State 105

	Stmt -> 'return' Expr ';' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'~'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20


State 106

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 24)

	')'            shift, and enter state 107


State 107

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 24)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'new'          shift, and enter state 44
	'return'       shift, and enter state 45
	'true'         shift, and enter state 46
	'void'         shift, and enter state 10
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Block          goto state 27
	Stmt           goto state 119
	BasicType      goto state 6
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36
	UnaryOp        goto state 37

State 108

	Expr -> 'new' Type '[' Expr . ']'                   (rule 56)

	']'            shift, and enter state 118


State 109

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 22)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 23)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'new'          shift, and enter state 44
	'return'       shift, and enter state 45
	'true'         shift, and enter state 46
	'void'         shift, and enter state 10
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Block          goto state 27
	Stmt           goto state 117
	BasicType      goto state 6
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36
	UnaryOp        goto state 37

State 110

	Stmt -> Expr '=' Expr ';' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'new'          reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'~'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17


State 111

	Expr6 -> Expr6 '(' ListExpr ')' .                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'++'           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'--'           reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<<'           reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'>>'           reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'^'            reduce using rule 43
	'|'            reduce using rule 43
	'||'           reduce using rule 43


State 112

	ListExpr -> Expr ',' . ListExpr                     (rule 60)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 58
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'new'          shift, and enter state 44
	'true'         shift, and enter state 46
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 92
	ListExpr       goto state 116
	UnaryOp        goto state 37

State 113

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	'++'           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'--'           reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<<'           reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'>>'           reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'^'            reduce using rule 42
	'|'            reduce using rule 42
	'||'           reduce using rule 42


State 114

	Item -> Ident '=' Expr .                            (rule 27)

	','            reduce using rule 27
	';'            reduce using rule 27


State 115

	ListItem -> Item ',' ListItem .                     (rule 29)

	';'            reduce using rule 29


State 116

	ListExpr -> Expr ',' ListExpr .                     (rule 60)

	')'            reduce using rule 60


State 117

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 22)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 23)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'else'         shift, and enter state 120
			(reduce using rule 22)

	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'~'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22


State 118

	Expr -> 'new' Type '[' Expr ']' .                   (rule 56)

	')'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'--'           reduce using rule 56
	';'            reduce using rule 56
	'='            reduce using rule 56
	']'            reduce using rule 56


State 119

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'~'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24


State 120

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 23)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'bool'         shift, and enter state 8
	'false'        shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 9
	'new'          shift, and enter state 44
	'return'       shift, and enter state 45
	'true'         shift, and enter state 46
	'void'         shift, and enter state 10
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	'~'            shift, and enter state 49
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 50

	Ident          goto state 25
	Integer        goto state 26
	Block          goto state 27
	Stmt           goto state 121
	BasicType      goto state 6
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36
	UnaryOp        goto state 37

State 121

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'~'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 80
Number of terminals: 44
Number of non-terminals: 28
Number of states: 122
