class Tree
{
    int elem;
    Tree[] children;

    constr (int e, Tree[] c)
    {
        elem = e;
        children = c;
    }

    constr (int e)
    {
        elem = e;
        children = new Tree[0];
    }

    constr (int e, Tree l, Tree r)
    {
        elem = e;
        children = new Tree[2];
        children[0] = l;
        children[1] = r;
    }
}

class List
{
    int elem;
    List next;

    constr (int h, List t)
    {
        elem = h;
        next = t;
    }
}

List prefix(Tree t)
{
    return prefix_2(t, null);
}

List prefix_2(Tree t, List acc)
{
    for (i = t.children.length - 1 down to -1)
        acc = prefix_2(t.children[i], acc);
    return new List(t.elem, acc);
}

int main()
{
    Tree t = new Tree(1,
                      new Tree(2, new Tree(3), new Tree(4)),
                      new Tree(5, new Tree(6), new Tree(7)));
    List l = prefix(t);

    while (l != null)
    {
        printInt(l.elem);
        l = l.next;
    }

    return 0;
}
